{"version":3,"sources":["webpack:///../node_modules/@theia/search-in-workspace/src/browser/in-memory-text-resource.ts","webpack:///../node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-frontend-contribution.ts","webpack:///../node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-frontend-module.ts","webpack:///../node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-result-tree-widget.tsx","webpack:///../node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-service.ts","webpack:///../node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-widget.tsx","webpack:///../node_modules/@theia/search-in-workspace/src/common/search-in-workspace-interface.ts","webpack:///../node_modules/@theia/search-in-workspace/src/browser/styles/index.css?ff9c","webpack:///../node_modules/@theia/search-in-workspace/src/browser/styles/index.css"],"names":[],"mappings":"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","file":"31.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ResourceResolver, Resource } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\n\nexport const MEMORY_TEXT = 'mem-txt';\n\nexport class InMemoryTextResource implements Resource {\n\n    constructor(readonly uri: URI) { }\n\n    async readContents(options?: { encoding?: string | undefined; } | undefined): Promise<string> {\n        return this.uri.query;\n    }\n\n    dispose(): void { }\n}\n\n@injectable()\nexport class InMemoryTextResourceResolver implements ResourceResolver {\n    resolve(uri: URI): Resource | Promise<Resource> {\n        if (uri.scheme !== MEMORY_TEXT) {\n            throw new Error(`Expected a URI with ${MEMORY_TEXT} scheme. Was: ${uri}.`);\n        }\n        return new InMemoryTextResource(uri);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { AbstractViewContribution, KeybindingRegistry, LabelProvider, CommonMenus, FrontendApplication, FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { SearchInWorkspaceWidget } from './search-in-workspace-widget';\nimport { injectable, inject } from 'inversify';\nimport { CommandRegistry, MenuModelRegistry, SelectionService, Command } from '@theia/core';\nimport { NAVIGATOR_CONTEXT_MENU } from '@theia/navigator/lib/browser/navigator-contribution';\nimport { UriCommandHandler, UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport URI from '@theia/core/lib/common/uri';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\nexport namespace SearchInWorkspaceCommands {\n    const SEARCH_CATEGORY = 'Search';\n    export const TOGGLE_SIW_WIDGET = {\n        id: 'search-in-workspace.toggle'\n    };\n    export const OPEN_SIW_WIDGET: Command = {\n        id: 'search-in-workspace.open',\n        category: SEARCH_CATEGORY,\n        label: 'Find in Files'\n\n    };\n    export const FIND_IN_FOLDER: Command = {\n        id: 'search-in-workspace.in-folder',\n        category: SEARCH_CATEGORY,\n        label: 'Find in Folder...'\n    };\n}\n\n@injectable()\nexport class SearchInWorkspaceFrontendContribution extends AbstractViewContribution<SearchInWorkspaceWidget> implements FrontendApplicationContribution {\n\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    constructor() {\n        super({\n            widgetId: SearchInWorkspaceWidget.ID,\n            widgetName: SearchInWorkspaceWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 300\n            },\n            toggleCommandId: SearchInWorkspaceCommands.TOGGLE_SIW_WIDGET.id\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView({ activate: false });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(SearchInWorkspaceCommands.OPEN_SIW_WIDGET, {\n            isEnabled: () => this.workspaceService.tryGetRoots().length > 0,\n            execute: () => this.openView({\n                activate: true\n            })\n        });\n\n        commands.registerCommand(SearchInWorkspaceCommands.FIND_IN_FOLDER, this.newUriAwareCommandHandler({\n            execute: async fileUri => {\n                const widget: SearchInWorkspaceWidget = await this.openView({\n                    activate: true\n                });\n                const uriStr = this.labelProvider.getLongName(fileUri);\n                widget.findInFolder(uriStr);\n            }\n        }));\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: SearchInWorkspaceCommands.OPEN_SIW_WIDGET.id,\n            keybinding: 'ctrlcmd+shift+f'\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        menus.registerMenuAction([...NAVIGATOR_CONTEXT_MENU, '6_find'], {\n            commandId: SearchInWorkspaceCommands.FIND_IN_FOLDER.id\n        });\n        menus.registerMenuAction(CommonMenus.EDIT_FIND, {\n            commandId: SearchInWorkspaceCommands.OPEN_SIW_WIDGET.id\n        });\n    }\n\n    protected newUriAwareCommandHandler(handler: UriCommandHandler<URI>): UriAwareCommandHandler<URI> {\n        return new UriAwareCommandHandler(this.selectionService, handler);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, interfaces } from 'inversify';\nimport { SearchInWorkspaceService, SearchInWorkspaceClientImpl } from './search-in-workspace-service';\nimport { SearchInWorkspaceServer } from '../common/search-in-workspace-interface';\nimport { WebSocketConnectionProvider, WidgetFactory, createTreeContainer, TreeWidget, bindViewContribution, FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { ResourceResolver } from '@theia/core';\nimport { SearchInWorkspaceWidget } from './search-in-workspace-widget';\nimport { SearchInWorkspaceResultTreeWidget } from './search-in-workspace-result-tree-widget';\nimport { SearchInWorkspaceFrontendContribution } from './search-in-workspace-frontend-contribution';\nimport { InMemoryTextResourceResolver } from './in-memory-text-resource';\n\nimport '../../src/browser/styles/index.css';\n\nexport default new ContainerModule(bind => {\n    bind(SearchInWorkspaceWidget).toSelf();\n    bind<WidgetFactory>(WidgetFactory).toDynamicValue(ctx => ({\n        id: SearchInWorkspaceWidget.ID,\n        createWidget: () => ctx.container.get(SearchInWorkspaceWidget)\n    }));\n    bind(SearchInWorkspaceResultTreeWidget).toDynamicValue(ctx => createSearchTreeWidget(ctx.container));\n\n    bindViewContribution(bind, SearchInWorkspaceFrontendContribution);\n    bind(FrontendApplicationContribution).toService(SearchInWorkspaceFrontendContribution);\n\n    // The object that gets notified of search results.\n    bind(SearchInWorkspaceClientImpl).toSelf().inSingletonScope();\n\n    bind(SearchInWorkspaceService).toSelf().inSingletonScope();\n\n    // The object to call methods on the backend.\n    bind(SearchInWorkspaceServer).toDynamicValue(ctx => {\n        const client = ctx.container.get(SearchInWorkspaceClientImpl);\n        return WebSocketConnectionProvider.createProxy(ctx.container, '/search-in-workspace', client);\n    }).inSingletonScope();\n\n    bind(InMemoryTextResourceResolver).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(InMemoryTextResourceResolver);\n});\n\nexport function createSearchTreeWidget(parent: interfaces.Container): SearchInWorkspaceResultTreeWidget {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeWidget);\n    child.bind(SearchInWorkspaceResultTreeWidget).toSelf();\n\n    return child.get(SearchInWorkspaceResultTreeWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    TreeWidget,\n    ContextMenuRenderer,\n    CompositeTreeNode,\n    ExpandableTreeNode,\n    SelectableTreeNode,\n    TreeModel,\n    TreeNode,\n    NodeProps,\n    LabelProvider,\n    TreeExpansionService,\n    ApplicationShell,\n    DiffUris\n} from '@theia/core/lib/browser';\nimport { SearchInWorkspaceResult, SearchInWorkspaceOptions } from '../common/search-in-workspace-interface';\nimport { SearchInWorkspaceService } from './search-in-workspace-service';\nimport { TreeProps } from '@theia/core/lib/browser';\nimport { EditorManager, EditorDecoration, TrackedRangeStickiness, OverviewRulerLane, EditorWidget, ReplaceOperation, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path, CancellationTokenSource, Emitter, Event } from '@theia/core';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { MEMORY_TEXT } from './in-memory-text-resource';\nimport { FileResourceResolver } from '@theia/filesystem/lib/browser';\nimport * as React from 'react';\n\nexport interface SearchInWorkspaceResultNode extends ExpandableTreeNode, SelectableTreeNode {\n    children: SearchInWorkspaceResultLineNode[];\n    path: string;\n    file: string;\n}\nexport namespace SearchInWorkspaceResultNode {\n    // tslint:disable-next-line:no-any\n    export function is(node: any): node is SearchInWorkspaceResultNode {\n        return ExpandableTreeNode.is(node) && SelectableTreeNode.is(node) && 'path' in node;\n    }\n}\n\nexport type SearchInWorkspaceResultLineNode = SelectableTreeNode & SearchInWorkspaceResult;\nexport namespace SearchInWorkspaceResultLineNode {\n    // tslint:disable-next-line:no-any\n    export function is(node: any): node is SearchInWorkspaceResultLineNode {\n        return SelectableTreeNode.is(node) && 'line' in node && 'character' in node && 'lineText' in node;\n    }\n}\n\n@injectable()\nexport class SearchInWorkspaceResultTreeWidget extends TreeWidget {\n\n    protected resultTree: Map<string, SearchInWorkspaceResultNode>;\n    protected workspaceRoot: string = '';\n\n    protected _showReplaceButtons = false;\n    protected _replaceTerm = '';\n    protected searchTerm = '';\n\n    protected appliedDecorations = new Map<string, string[]>();\n\n    private cancelIndicator = new CancellationTokenSource();\n\n    protected changeEmitter = new Emitter<Map<string, SearchInWorkspaceResultNode>>();\n    // tslint:disable-next-line:no-any\n    protected focusInputEmitter = new Emitter<any>();\n\n    @inject(SearchInWorkspaceService) protected readonly searchService: SearchInWorkspaceService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(FileResourceResolver) protected readonly fileResourceResolver: FileResourceResolver;\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(TreeExpansionService) protected readonly expansionService: TreeExpansionService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(TreeModel) readonly model: TreeModel,\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n\n        model.root = {\n            id: 'ResultTree',\n            name: 'ResultTree',\n            parent: undefined,\n            visible: false,\n            children: []\n        } as CompositeTreeNode;\n\n        this.toDispose.push(model.onSelectionChanged(nodes => {\n            const node = nodes[0];\n            if (SearchInWorkspaceResultLineNode.is(node)) {\n                this.doOpen(node, true);\n            }\n        }));\n\n        this.resultTree = new Map<string, SearchInWorkspaceResultNode>();\n        this.toDispose.push(model.onNodeRefreshed(() => this.changeEmitter.fire(this.resultTree)));\n    }\n\n    @postConstruct()\n    protected init() {\n        super.init();\n        this.addClass('resultContainer');\n\n        this.workspaceService.roots.then(roots => {\n            const rootFileStat = roots[0];\n            if (rootFileStat) {\n                const uri = new URI(rootFileStat.uri);\n                this.workspaceRoot = uri.withoutScheme().toString();\n            }\n        });\n\n        this.toDispose.push(this.changeEmitter);\n        this.toDispose.push(this.focusInputEmitter);\n\n        this.toDispose.push(this.editorManager.onActiveEditorChanged(() => {\n            this.updateCurrentEditorDecorations();\n        }));\n    }\n\n    set showReplaceButtons(srb: boolean) {\n        this._showReplaceButtons = srb;\n        this.update();\n    }\n\n    set replaceTerm(rt: string) {\n        this._replaceTerm = rt;\n        this.update();\n    }\n\n    get onChange(): Event<Map<string, SearchInWorkspaceResultNode>> {\n        return this.changeEmitter.event;\n    }\n\n    get onFocusInput(): Event<void> {\n        return this.focusInputEmitter.event;\n    }\n\n    collapseAll() {\n        this.resultTree.forEach(v => this.expansionService.collapseNode(v));\n    }\n\n    async search(searchTerm: string, searchOptions: SearchInWorkspaceOptions): Promise<void> {\n        this.searchTerm = searchTerm;\n        this.resultTree.clear();\n        this.resultTree = new Map<string, SearchInWorkspaceResultNode>();\n        this.cancelIndicator.cancel();\n        this.cancelIndicator = new CancellationTokenSource();\n        const token = this.cancelIndicator.token;\n        if (searchTerm === '') {\n            this.refreshModelChildren();\n            return;\n        }\n        const searchId = await this.searchService.search(searchTerm, {\n            onResult: async (aSearchId: number, result: SearchInWorkspaceResult) => {\n                if (token.isCancellationRequested || aSearchId !== searchId) {\n                    return;\n                }\n                const { name, path } = this.filenameAndPath(result.file);\n                const tree = this.resultTree;\n                let resultElement = tree.get(result.file);\n\n                if (resultElement) {\n                    const resultLine = this.createResultLineNode(result, resultElement);\n                    resultElement.children.push(resultLine);\n                    if (resultElement.children.length >= 20) {\n                        resultElement.expanded = false;\n                    }\n                } else {\n                    const children: SearchInWorkspaceResultLineNode[] = [];\n                    const icon = await this.labelProvider.getIcon(new URI(result.file));\n                    if (CompositeTreeNode.is(this.model.root)) {\n                        resultElement = {\n                            selected: false,\n                            name,\n                            path,\n                            children,\n                            expanded: true,\n                            id: path + '-' + name,\n                            parent: this.model.root,\n                            icon,\n                            file: result.file\n                        };\n                        resultElement.children.push(this.createResultLineNode(result, resultElement));\n                        tree.set(result.file, resultElement);\n                    }\n                }\n            },\n            onDone: () => {\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.refreshModelChildren();\n            }\n        }, searchOptions).catch(e => { return; });\n        token.onCancellationRequested(() => {\n            if (searchId) {\n                this.searchService.cancel(searchId);\n            }\n        });\n    }\n\n    focusFirstResult() {\n        if (CompositeTreeNode.is(this.model.root) && this.model.root.children.length > 0) {\n            const node = this.model.root.children[0];\n            if (SelectableTreeNode.is(node)) {\n                this.node.focus();\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    protected handleUp(event: KeyboardEvent): void {\n        if (!this.model.getPrevSelectableNode(this.model.selectedNodes[0])) {\n            this.focusInputEmitter.fire(true);\n        } else {\n            super.handleUp(event);\n        }\n    }\n\n    protected refreshModelChildren() {\n        if (CompositeTreeNode.is(this.model.root)) {\n            this.model.root.children = Array.from(this.resultTree.values());\n            this.model.refresh();\n            this.updateCurrentEditorDecorations();\n        }\n    }\n\n    protected updateCurrentEditorDecorations() {\n        this.shell.allTabBars.map(tb => {\n            const currentTitle = tb.currentTitle;\n            if (currentTitle && currentTitle.owner instanceof EditorWidget) {\n                const widget = currentTitle.owner;\n                const result = this.resultTree.get(widget.editor.uri.withoutScheme().toString());\n                this.decorateEditor(result, widget);\n            }\n        });\n\n        const currentWidget = this.editorManager.currentEditor;\n        if (currentWidget) {\n            const result = this.resultTree.get(currentWidget.editor.uri.withoutScheme().toString());\n            this.decorateEditor(result, currentWidget);\n        }\n    }\n\n    protected createResultLineNode(result: SearchInWorkspaceResult, resultNode: SearchInWorkspaceResultNode): SearchInWorkspaceResultLineNode {\n        return {\n            ...result,\n            selected: false,\n            id: result.file + '-' + result.line + '-' + result.character + '-' + result.length,\n            name: result.lineText,\n            parent: resultNode\n        };\n    }\n\n    protected filenameAndPath(uriStr: string): { name: string, path: string } {\n        const uri: URI = new URI(uriStr);\n        const name = uri.displayName;\n        const path = new Path(uri.toString().substr(this.workspaceRoot.length + 1)).dir.toString();\n        return { name, path };\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (SearchInWorkspaceResultNode.is(node)) {\n            return this.renderResultNode(node);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            return this.renderResultLineNode(node);\n        }\n        return '';\n    }\n\n    protected renderTailDecorations(node: TreeNode, props: NodeProps): React.ReactNode {\n        return <div className='result-node-buttons'>\n            {this._showReplaceButtons && this.renderReplaceButton(node)}\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected readonly replace = (node: TreeNode, e: React.MouseEvent<HTMLElement>) => this.doReplace(node, e);\n    protected async doReplace(node: TreeNode, e: React.MouseEvent<HTMLElement>) {\n        this.replaceResult(node);\n        this.removeNode(node);\n        e.stopPropagation();\n    }\n\n    protected renderReplaceButton(node: TreeNode): React.ReactNode {\n        return <span className='replace-result' onClick={e => this.replace(node, e)}></span>;\n    }\n\n    replaceAll(): void {\n        this.resultTree.forEach(async resultNode => {\n            await this.replaceResult(resultNode);\n        });\n        this.resultTree.clear();\n        this.refreshModelChildren();\n    }\n\n    protected updateRightResults(node: SearchInWorkspaceResultLineNode) {\n        const result = this.resultTree.get(node.file);\n        if (result) {\n            const rightPositionedNodes = result.children.filter(rl => rl.line === node.line && rl.character > node.character);\n            const diff = this._replaceTerm.length - this.searchTerm.length;\n            rightPositionedNodes.map(r => r.character += diff);\n        }\n    }\n\n    protected async replaceResult(node: TreeNode) {\n        const toReplace: SearchInWorkspaceResultLineNode[] = [];\n        if (SearchInWorkspaceResultNode.is(node)) {\n            toReplace.push(...node.children);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            toReplace.push(node);\n            this.updateRightResults(node);\n        }\n\n        if (toReplace.length > 0) {\n            const widget = await this.doOpen(toReplace[0]);\n            const source = widget.editor.document.getText();\n            const replaceOperations = toReplace.map(resultLineNode => ({\n                text: this._replaceTerm,\n                range: {\n                    start: {\n                        line: resultLineNode.line - 1,\n                        character: resultLineNode.character - 1\n                    },\n                    end: {\n                        line: resultLineNode.line - 1,\n                        character: resultLineNode.character - 1 + resultLineNode.length\n                    }\n                }\n            } as ReplaceOperation));\n            await widget.editor.replaceText({\n                source,\n                replaceOperations\n            });\n        }\n    }\n\n    protected readonly remove = (node: TreeNode, e: React.MouseEvent<HTMLElement>) => this.doRemove(node, e);\n    protected doRemove(node: TreeNode, e: React.MouseEvent<HTMLElement>) {\n        this.removeNode(node);\n        e.stopPropagation();\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <span className='remove-node' onClick={e => this.remove(node, e)}></span>;\n    }\n\n    protected removeNode(node: TreeNode) {\n        if (SearchInWorkspaceResultNode.is(node)) {\n            this.resultTree.delete(node.file);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            const result = this.resultTree.get(node.file);\n            if (result) {\n                const index = result.children.findIndex(n => n.file === node.file && n.line === node.line && n.character === node.character);\n                if (index > -1) {\n                    result.children.splice(index, 1);\n                    if (result.children.length === 0) {\n                        this.resultTree.delete(result.file);\n                    }\n                }\n            }\n        }\n        this.refreshModelChildren();\n    }\n\n    protected renderResultNode(node: SearchInWorkspaceResultNode): React.ReactNode {\n        const icon = node.icon;\n        return <div className='result'>\n            <div className='result-head'>\n                <div className={`result-head-info noWrapInfo noselect ${node.selected ? 'selected' : ''}`}>\n                    <span className={`file-icon ${icon || ''}`}></span>\n                    <span className={'file-name'}>\n                        {node.name}\n                    </span>\n                    <span className={'file-path'}>\n                        {node.path}\n                    </span>\n                </div>\n                <span className={'result-number'}>\n                    {node.children.length.toString()}\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderResultLineNode(node: SearchInWorkspaceResultLineNode): React.ReactNode {\n        const prefix = node.character > 26 ? '... ' : '';\n        return <div className={`resultLine noWrapInfo ${node.selected ? 'selected' : ''}`}>\n            <span>\n                {prefix + node.lineText.substr(0, node.character - 1).substr(-25)}\n            </span>\n            {this.renderMatchLinePart(node)}\n            <span>\n                {node.lineText.substr(node.character - 1 + node.length, 75)}\n            </span>\n        </div>;\n    }\n\n    protected renderMatchLinePart(node: SearchInWorkspaceResultLineNode): React.ReactNode {\n        const replaceTerm = this._replaceTerm !== '' && this._showReplaceButtons ? <span className='replace-term'>{this._replaceTerm}</span> : '';\n        const className = `match${this._showReplaceButtons ? ' strike-through' : ''}`;\n        return <React.Fragment>\n            <span className={className}> {node.lineText.substr(node.character - 1, node.length)}</span>\n            {replaceTerm}\n        </React.Fragment>;\n    }\n\n    protected async doOpen(node: SearchInWorkspaceResultLineNode, preview: boolean = false): Promise<EditorWidget> {\n        let fileUri: URI;\n        const resultNode = this.resultTree.get(node.file);\n        if (resultNode && this._showReplaceButtons && preview) {\n            const leftUri = new URI(node.file).withScheme('file');\n            const rightUri = await this.createReplacePreview(resultNode);\n            fileUri = DiffUris.encode(leftUri, rightUri);\n        } else {\n            fileUri = new URI(node.file).withScheme('file');\n        }\n\n        const opts: EditorOpenerOptions | undefined = !DiffUris.isDiffUri(fileUri) ? {\n            selection: {\n                start: {\n                    line: node.line - 1,\n                    character: node.character - 1\n                },\n                end: {\n                    line: node.line - 1,\n                    character: node.character - 1 + node.length\n                }\n            },\n            mode: 'reveal'\n        } : undefined;\n\n        const editorWidget = await this.editorManager.open(fileUri, opts);\n\n        if (!DiffUris.isDiffUri(fileUri)) {\n            this.decorateEditor(resultNode, editorWidget);\n        }\n\n        return editorWidget;\n    }\n\n    protected async createReplacePreview(node: SearchInWorkspaceResultNode): Promise<URI> {\n        const fileUri = new URI(node.file).withScheme('file');\n        const uri = fileUri.withoutScheme().toString();\n        const resource = await this.fileResourceResolver.resolve(fileUri);\n        const content = await resource.readContents();\n\n        const lines = content.split('\\n');\n        node.children.map(l => {\n            const leftPositionedNodes = node.children.filter(rl => rl.line === l.line && rl.character < l.character);\n            const diff = (this._replaceTerm.length - this.searchTerm.length) * leftPositionedNodes.length;\n            const start = lines[l.line - 1].substr(0, l.character - 1 + diff);\n            const end = lines[l.line - 1].substr(l.character - 1 + diff + l.length);\n            lines[l.line - 1] = start + this._replaceTerm + end;\n        });\n\n        return new URI(uri).withScheme(MEMORY_TEXT).withQuery(lines.join('\\n'));\n    }\n\n    protected decorateEditor(node: SearchInWorkspaceResultNode | undefined, editorWidget: EditorWidget) {\n        if (!DiffUris.isDiffUri(editorWidget.editor.uri)) {\n            const key = `${editorWidget.editor.uri.toString()}#search-in-workspace-matches`;\n            const oldDecorations = this.appliedDecorations.get(key) || [];\n            const newDecorations = this.createEditorDecorations(node);\n            const appliedDecorations = editorWidget.editor.deltaDecorations({\n                newDecorations,\n                oldDecorations,\n            });\n            this.appliedDecorations.set(key, appliedDecorations);\n        }\n    }\n\n    protected createEditorDecorations(resultNode: SearchInWorkspaceResultNode | undefined): EditorDecoration[] {\n        const decorations: EditorDecoration[] = [];\n        if (resultNode) {\n            resultNode.children.map(res => {\n                decorations.push({\n                    range: {\n                        start: {\n                            line: res.line - 1,\n                            character: res.character - 1\n                        },\n                        end: {\n                            line: res.line - 1,\n                            character: res.character - 1 + res.length\n                        }\n                    },\n                    options: {\n                        overviewRuler: {\n                            color: 'rgba(230, 0, 0, 1)',\n                            position: OverviewRulerLane.Full\n                        },\n                        className: res.selected ? 'current-search-in-workspace-editor-match' : 'search-in-workspace-editor-match',\n                        stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n                    }\n                });\n            });\n        }\n        return decorations;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { SearchInWorkspaceServer, SearchInWorkspaceClient, SearchInWorkspaceResult, SearchInWorkspaceOptions } from '../common/search-in-workspace-interface';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ILogger } from '@theia/core';\n\n/**\n * Class that will receive the search results from the server.  This is separate\n * from the SearchInWorkspaceService class only to avoid a cycle in the\n * dependency injection.\n */\n\n@injectable()\nexport class SearchInWorkspaceClientImpl implements SearchInWorkspaceClient {\n    private service: SearchInWorkspaceClient;\n\n    onResult(searchId: number, result: SearchInWorkspaceResult): void {\n        this.service.onResult(searchId, result);\n    }\n    onDone(searchId: number, error?: string): void {\n        this.service.onDone(searchId, error);\n    }\n\n    setService(service: SearchInWorkspaceClient) {\n        this.service = service;\n    }\n}\n\nexport type SearchInWorkspaceCallbacks = SearchInWorkspaceClient;\n\n/**\n * Service to search text in the workspace files.\n */\n\n@injectable()\nexport class SearchInWorkspaceService implements SearchInWorkspaceClient {\n\n    // All the searches that we have started, that are not done yet (onDone\n    // with that searchId has not been called).\n    private pendingSearches = new Map<number, SearchInWorkspaceCallbacks>();\n\n    // Due to the asynchronicity of the node backend, it's possible that we\n    // start a search, receive an event for that search, and then receive\n    // the search id for that search.We therefore need to keep those\n    // events until we get the search id and return it to the caller.\n    // Otherwise the caller would discard the event because it doesn't know\n    // the search id yet.\n    private pendingOnDones: Map<number, string | undefined> = new Map();\n\n    private lastKnownSearchId: number = -1;\n\n    @inject(SearchInWorkspaceServer) protected readonly searchServer: SearchInWorkspaceServer;\n    @inject(SearchInWorkspaceClientImpl) protected readonly client: SearchInWorkspaceClientImpl;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(ILogger) protected readonly logger: ILogger;\n\n    @postConstruct()\n    protected init() {\n        this.client.setService(this);\n    }\n\n    isEnabled(): boolean {\n        return this.workspaceService.opened;\n    }\n\n    onResult(searchId: number, result: SearchInWorkspaceResult): void {\n        const callbacks = this.pendingSearches.get(searchId);\n\n        if (callbacks) {\n            callbacks.onResult(searchId, result);\n        }\n    }\n\n    onDone(searchId: number, error?: string): void {\n        const callbacks = this.pendingSearches.get(searchId);\n\n        if (callbacks) {\n            this.pendingSearches.delete(searchId);\n            callbacks.onDone(searchId, error);\n        } else {\n            if (searchId > this.lastKnownSearchId) {\n                this.logger.debug(`Got an onDone for a searchId we don't know about (${searchId}), stashing it for later with error = `, error);\n                this.pendingOnDones.set(searchId, error);\n            } else {\n                // It's possible to receive an onDone for a search we have cancelled.  Just ignore it.\n                this.logger.debug(`Got an onDone for a searchId we don't know about (${searchId}), but it's probably an old one, error = `, error);\n            }\n        }\n    }\n\n    // Start a search of the string \"what\" in the workspace.\n    async search(what: string, callbacks: SearchInWorkspaceCallbacks, opts?: SearchInWorkspaceOptions): Promise<number> {\n        const root = (await this.workspaceService.roots)[0];\n\n        if (!root) {\n            throw new Error('Search failed: no workspace root.');\n        }\n\n        const searchId = await this.searchServer.search(what, root.uri, opts);\n        this.pendingSearches.set(searchId, callbacks);\n        this.lastKnownSearchId = searchId;\n\n        this.logger.debug('Service launched search ' + searchId);\n\n        // Check if we received an onDone before search() returned.\n        if (this.pendingOnDones.has(searchId)) {\n            this.logger.debug('Ohh, we have a stashed onDone for that searchId');\n            const error = this.pendingOnDones.get(searchId);\n            this.pendingOnDones.delete(searchId);\n\n            // Call the client's searchId, but first give it a\n            // chance to record the returned searchId.\n            setTimeout(() => {\n                this.onDone(searchId, error);\n            }, 0);\n        }\n\n        return searchId;\n    }\n\n    // Cancel an ongoing search.\n    cancel(searchId: number) {\n        this.pendingSearches.delete(searchId);\n        this.searchServer.cancel(searchId);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Widget, Message, BaseWidget, Key, StatefulWidget, MessageLoop } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { SearchInWorkspaceResultTreeWidget } from './search-in-workspace-result-tree-widget';\nimport { SearchInWorkspaceOptions } from '../common/search-in-workspace-interface';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Disposable } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\nexport interface SearchFieldState {\n    className: string;\n    enabled: boolean;\n    title: string;\n}\n\n@injectable()\nexport class SearchInWorkspaceWidget extends BaseWidget implements StatefulWidget {\n\n    static ID = 'search-in-workspace';\n    static LABEL = 'Search';\n\n    protected matchCaseState: SearchFieldState;\n    protected wholeWordState: SearchFieldState;\n    protected regExpState: SearchFieldState;\n    protected includeIgnoredState: SearchFieldState;\n\n    protected showSearchDetails = false;\n    protected hasResults = false;\n    protected resultNumber = 0;\n\n    protected searchFieldContainerIsFocused = false;\n\n    protected searchInWorkspaceOptions: SearchInWorkspaceOptions;\n\n    protected searchTerm = '';\n    protected replaceTerm = '';\n\n    protected showReplaceField = false;\n\n    protected contentNode: HTMLElement;\n    protected searchFormContainer: HTMLElement;\n    protected resultContainer: HTMLElement;\n\n    @inject(SearchInWorkspaceResultTreeWidget) protected readonly resultTreeWidget: SearchInWorkspaceResultTreeWidget;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    @postConstruct()\n    init() {\n        this.id = SearchInWorkspaceWidget.ID;\n        this.title.label = SearchInWorkspaceWidget.LABEL;\n        this.title.caption = SearchInWorkspaceWidget.LABEL;\n        this.title.iconClass = 'fa search-in-workspace-tab-icon';\n\n        this.contentNode = document.createElement('div');\n        this.contentNode.classList.add('t-siw-search-container');\n        this.searchFormContainer = document.createElement('div');\n        this.searchFormContainer.classList.add('searchHeader');\n        this.contentNode.appendChild(this.searchFormContainer);\n        this.node.appendChild(this.contentNode);\n\n        this.matchCaseState = {\n            className: 'match-case',\n            enabled: false,\n            title: 'Match Case'\n        };\n        this.wholeWordState = {\n            className: 'whole-word',\n            enabled: false,\n            title: 'Match Whole Word'\n        };\n        this.regExpState = {\n            className: 'use-regexp',\n            enabled: false,\n            title: 'Use Regular Expression'\n        };\n        this.includeIgnoredState = {\n            className: 'include-ignored fa fa-eye',\n            enabled: false,\n            title: 'Include Ignored Files'\n        };\n        this.searchInWorkspaceOptions = {\n            matchCase: false,\n            matchWholeWord: false,\n            useRegExp: false,\n            includeIgnored: false,\n            include: [],\n            exclude: [],\n            maxResults: 2000\n        };\n        this.toDispose.push(this.resultTreeWidget.onChange(r => {\n            this.hasResults = r.size > 0;\n            this.resultNumber = 0;\n            const results = Array.from(r.values());\n            results.forEach(result => this.resultNumber += result.children.length);\n            this.update();\n        }));\n\n        this.toDispose.push(this.resultTreeWidget.onFocusInput(b => {\n            this.focusInputField();\n        }));\n\n        this.toDispose.push(this.resultTreeWidget);\n    }\n\n    storeState(): object {\n        return {\n            matchCaseState: this.matchCaseState,\n            wholeWordState: this.wholeWordState,\n            regExpState: this.regExpState,\n            includeIgnoredState: this.includeIgnoredState,\n            showSearchDetails: this.showSearchDetails,\n            searchInWorkspaceOptions: this.searchInWorkspaceOptions,\n            searchTerm: this.searchTerm,\n            replaceTerm: this.replaceTerm,\n            showReplaceField: this.showReplaceField\n        };\n    }\n\n    // tslint:disable-next-line:no-any\n    restoreState(oldState: any): void {\n        this.matchCaseState = oldState.matchCaseState;\n        this.wholeWordState = oldState.wholeWordState;\n        this.regExpState = oldState.regExpState;\n        this.includeIgnoredState = oldState.includeIgnoredState;\n        this.showSearchDetails = oldState.showSearchDetails;\n        this.searchInWorkspaceOptions = oldState.searchInWorkspaceOptions;\n        this.searchTerm = oldState.searchTerm;\n        this.replaceTerm = oldState.replaceTerm;\n        this.showReplaceField = oldState.showReplaceField;\n        this.resultTreeWidget.replaceTerm = this.replaceTerm;\n        this.resultTreeWidget.showReplaceButtons = this.showReplaceField;\n        this.refresh();\n    }\n\n    findInFolder(uri: string): void {\n        this.showSearchDetails = true;\n        const value = `${uri}/**`;\n        this.searchInWorkspaceOptions.include = [value];\n        const include = document.getElementById('include-glob-field');\n        if (include) {\n            (include as HTMLInputElement).value = value;\n        }\n        this.update();\n    }\n\n    protected onAfterAttach(msg: Message) {\n        super.onAfterAttach(msg);\n        ReactDOM.render(<React.Fragment>{this.renderSearchHeader()}</React.Fragment>, this.searchFormContainer);\n        Widget.attach(this.resultTreeWidget, this.contentNode);\n        this.toDisposeOnDetach.push(Disposable.create(() => {\n            Widget.detach(this.resultTreeWidget);\n        }));\n    }\n\n    protected onUpdateRequest(msg: Message) {\n        super.onUpdateRequest(msg);\n        ReactDOM.render(<React.Fragment>{this.renderSearchHeader()}</React.Fragment>, this.searchFormContainer);\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        MessageLoop.sendMessage(this.resultTreeWidget, Widget.ResizeMessage.UnknownSize);\n    }\n\n    protected onAfterShow(msg: Message) {\n        this.focusInputField();\n    }\n\n    protected onActivateRequest(msg: Message) {\n        super.onActivateRequest(msg);\n        this.focusInputField();\n    }\n\n    protected focusInputField() {\n        const f = document.getElementById('search-input-field');\n        if (f) {\n            (f as HTMLInputElement).focus();\n            (f as HTMLInputElement).select();\n        }\n    }\n\n    protected renderSearchHeader(): React.ReactNode {\n        const controlButtons = this.renderControlButtons();\n        const searchAndReplaceContainer = this.renderSearchAndReplace();\n        const searchDetails = this.renderSearchDetails();\n        return <div>{controlButtons}{searchAndReplaceContainer}{searchDetails}</div>;\n    }\n\n    protected refresh = () => {\n        this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n        this.update();\n    }\n\n    protected collapseAll = () => {\n        this.resultTreeWidget.collapseAll();\n        this.update();\n    }\n\n    protected clear = () => {\n        this.searchTerm = '';\n        this.replaceTerm = '';\n        this.searchInWorkspaceOptions.include = [];\n        this.searchInWorkspaceOptions.exclude = [];\n        this.includeIgnoredState.enabled = false;\n        this.matchCaseState.enabled = false;\n        this.wholeWordState.enabled = false;\n        this.regExpState.enabled = false;\n        const search = document.getElementById('search-input-field');\n        const replace = document.getElementById('replace-input-field');\n        const include = document.getElementById('include-glob-field');\n        const exclude = document.getElementById('exclude-glob-field');\n        if (search && replace && include && exclude) {\n            (search as HTMLInputElement).value = '';\n            (replace as HTMLInputElement).value = '';\n            (include as HTMLInputElement).value = '';\n            (exclude as HTMLInputElement).value = '';\n        }\n        this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n        this.update();\n    }\n\n    protected renderControlButtons(): React.ReactNode {\n        const refreshButton = this.renderControlButton(`refresh${(this.hasResults || this.searchTerm !== '') && this.workspaceService.tryGetRoots().length > 0\n            ? ' enabled' : ''}`, 'Refresh', this.refresh);\n        const collapseAllButton = this.renderControlButton(`collapse-all${this.hasResults ? ' enabled' : ''}`, 'Collapse All', this.collapseAll);\n        const clearButton = this.renderControlButton(`clear-all${this.hasResults ? ' enabled' : ''}`, 'Clear', this.clear);\n        return <div className='controls button-container'>{refreshButton}{collapseAllButton}{clearButton}</div>;\n    }\n\n    protected renderControlButton(btnClass: string, title: string, clickHandler: () => void): React.ReactNode {\n        return <span className={`btn ${btnClass}`} title={title} onClick={clickHandler}></span>;\n    }\n\n    protected renderSearchAndReplace(): React.ReactNode {\n        const toggleContainer = this.renderReplaceFieldToggle();\n        const searchField = this.renderSearchField();\n        const replaceField = this.renderReplaceField();\n        return <div className='search-and-replace-container'>\n            {toggleContainer}\n            <div className='search-and-replace-fields'>\n                {searchField}\n                {replaceField}\n            </div>\n        </div>;\n    }\n\n    protected renderReplaceFieldToggle(): React.ReactNode {\n        const toggle = <span className={`fa fa-caret-${this.showReplaceField ? 'down' : 'right'}`}></span>;\n        return <div\n            className='replace-toggle'\n            tabIndex={0}\n            onClick={e => {\n                const elArr = document.getElementsByClassName('replace-toggle');\n                if (elArr && elArr.length > 0) {\n                    (elArr[0] as HTMLElement).focus();\n                }\n                this.showReplaceField = !this.showReplaceField;\n                this.resultTreeWidget.showReplaceButtons = this.showReplaceField;\n                this.update();\n            }}>\n            {toggle}\n        </div>;\n    }\n\n    protected renderNotification(): React.ReactNode {\n        if (this.workspaceService.tryGetRoots().length <= 0) {\n            return <div className='search-notification show'>\n                <div>Cannot search without an active workspace present.</div>\n            </div>;\n        }\n        return <div\n            className={`search-notification ${this.searchInWorkspaceOptions.maxResults && this.resultNumber >= this.searchInWorkspaceOptions.maxResults ? 'show' : ''}`}>\n            <div>\n                This is only a subset of all results. Use a more specific search term to narrow down the result list.\n            </div>\n        </div>;\n    }\n\n    protected readonly focusSearchFieldContainer = () => this.doFocusSearchFieldContainer();\n    protected doFocusSearchFieldContainer() {\n        this.searchFieldContainerIsFocused = true;\n        this.update();\n    }\n    protected readonly unfocusSearchFieldContainer = () => this.doUnfocusSearchFieldContainer();\n    protected doUnfocusSearchFieldContainer() {\n        this.searchFieldContainerIsFocused = false;\n        this.update();\n    }\n\n    protected readonly search = (e: React.KeyboardEvent) => this.doSearch(e);\n    protected doSearch(e: React.KeyboardEvent) {\n        if (e.target) {\n            if (Key.ARROW_DOWN.keyCode === e.keyCode) {\n                this.resultTreeWidget.focusFirstResult();\n            } else {\n                this.searchTerm = (e.target as HTMLInputElement).value;\n                this.resultTreeWidget.search(this.searchTerm, (this.searchInWorkspaceOptions || {}));\n                this.update();\n            }\n        }\n    }\n\n    protected renderSearchField(): React.ReactNode {\n        const input = <input\n            id='search-input-field'\n            type='text'\n            size={1}\n            placeholder='Search'\n            defaultValue={this.searchTerm}\n            onKeyUp={this.search}\n        ></input>;\n        const notification = this.renderNotification();\n        const optionContainer = this.renderOptionContainer();\n        const tooMany = this.searchInWorkspaceOptions.maxResults && this.resultNumber >= this.searchInWorkspaceOptions.maxResults ? 'tooManyResults' : '';\n        const className = `search-field-container ${tooMany} ${this.searchFieldContainerIsFocused ? 'focused' : ''}`;\n        return <div className={className}>\n            <div className='search-field' tabIndex={-1} onFocus={this.focusSearchFieldContainer} onBlur={this.unfocusSearchFieldContainer}>\n                {input}\n                {optionContainer}\n            </div>\n            {notification}\n        </div>;\n    }\n\n    protected readonly updateReplaceTerm = (e: React.KeyboardEvent) => this.doUpdateReplaceTerm(e);\n    protected doUpdateReplaceTerm(e: React.KeyboardEvent) {\n        if (e.target) {\n            this.replaceTerm = (e.target as HTMLInputElement).value;\n            this.resultTreeWidget.replaceTerm = this.replaceTerm;\n            this.resultTreeWidget.search(this.searchTerm, (this.searchInWorkspaceOptions || {}));\n            this.update();\n        }\n    }\n\n    protected renderReplaceField(): React.ReactNode {\n        const replaceAllButtonContainer = this.renderReplaceAllButtonContainer();\n        return <div className={`replace-field${this.showReplaceField ? '' : ' hidden'}`}>\n            <input\n                id='replace-input-field'\n                type='text'\n                size={1}\n                placeholder='Replace'\n                defaultValue={this.replaceTerm}\n                onKeyUp={this.updateReplaceTerm}>\n            </input>\n            {replaceAllButtonContainer}\n        </div>;\n    }\n\n    protected renderReplaceAllButtonContainer(): React.ReactNode {\n        return <div className='replace-all-button-container'>\n            <span\n                className={`replace-all-button${this.searchTerm === '' ? ' disabled' : ''}`}\n                onClick={() => {\n                    this.resultTreeWidget.replaceAll();\n                }}>\n            </span>\n        </div>;\n    }\n\n    protected renderOptionContainer(): React.ReactNode {\n        const matchCaseOption = this.renderOptionElement(this.matchCaseState);\n        const wholeWordOption = this.renderOptionElement(this.wholeWordState);\n        const regexOption = this.renderOptionElement(this.regExpState);\n        const includeIgnoredOption = this.renderOptionElement(this.includeIgnoredState);\n        return <div className='option-buttons'>{matchCaseOption}{wholeWordOption}{regexOption}{includeIgnoredOption}</div>;\n    }\n\n    protected renderOptionElement(opt: SearchFieldState): React.ReactNode {\n        return <span\n            className={`${opt.className} option ${opt.enabled ? 'enabled' : ''}`}\n            title={opt.title}\n            onClick={() => this.handleOptionClick(opt)}></span>;\n    }\n\n    protected handleOptionClick(option: SearchFieldState): void {\n        option.enabled = !option.enabled;\n        this.updateSearchOptions();\n        this.searchFieldContainerIsFocused = true;\n        this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n        this.update();\n    }\n\n    protected updateSearchOptions() {\n        this.searchInWorkspaceOptions.matchCase = this.matchCaseState.enabled;\n        this.searchInWorkspaceOptions.matchWholeWord = this.wholeWordState.enabled;\n        this.searchInWorkspaceOptions.useRegExp = this.regExpState.enabled;\n        this.searchInWorkspaceOptions.includeIgnored = this.includeIgnoredState.enabled;\n    }\n\n    protected renderSearchDetails(): React.ReactNode {\n        const expandButton = this.renderExpandGlobFieldsButton();\n        const globFieldContainer = this.renderGlobFieldContainer();\n        return <div className='search-details'>{expandButton}{globFieldContainer}</div>;\n    }\n\n    protected renderGlobFieldContainer(): React.ReactNode {\n        const includeField = this.renderGlobField('include');\n        const excludeField = this.renderGlobField('exclude');\n        return <div className={`glob-field-container${!this.showSearchDetails ? ' hidden' : ''}`}>{includeField}{excludeField}</div>;\n    }\n\n    protected renderExpandGlobFieldsButton(): React.ReactNode {\n        return <div className='button-container'>\n            <span\n                className='fa fa-ellipsis-h btn'\n                onClick={() => {\n                    this.showSearchDetails = !this.showSearchDetails;\n                    this.update();\n                }}></span>\n        </div>;\n    }\n\n    protected renderGlobField(kind: 'include' | 'exclude'): React.ReactNode {\n        const currentValue = this.searchInWorkspaceOptions[kind];\n        const value = currentValue && currentValue.join(', ') || '';\n        return <div className='glob-field'>\n            <div className='label'>{'files to ' + kind}</div>\n            <input\n                type='text'\n                size={1}\n                defaultValue={value}\n                id={kind + '-glob-field'}\n                onKeyUp={e => {\n                    if (e.target) {\n                        if (Key.ENTER.keyCode === e.keyCode) {\n                            this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n                        } else {\n                            this.searchInWorkspaceOptions[kind] = this.splitOnComma((e.target as HTMLInputElement).value);\n                        }\n                    }\n                }}></input>\n        </div>;\n    }\n\n    protected splitOnComma(patterns: string): string[] {\n        return patterns.split(',').map(s => s.trim());\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core';\n\nexport interface SearchInWorkspaceOptions {\n    /**\n     * Maximum number of results to return.  Defaults to unlimited.\n     */\n    maxResults?: number;\n    /**\n     * Search case sensitively if true.\n     */\n    matchCase?: boolean;\n    /**\n     * Search whole words only if true.\n     */\n    matchWholeWord?: boolean;\n    /**\n     * Use regular expressions for search if true.\n     */\n    useRegExp?: boolean;\n    /**\n     * Include all .gitignored and hidden files.\n     */\n    includeIgnored?: boolean;\n    /**\n     * Glob pattern for matching files and directories to include the search.\n     */\n    include?: string[];\n    /**\n     * Glob pattern for matching files and directories to exclude the search.\n     */\n    exclude?: string[]\n}\n\nexport interface SearchInWorkspaceResult {\n    /**\n     * The path to the file containing the result.\n     */\n    file: string;\n\n    /**\n     * The (1-based) line number of the result.\n     */\n    line: number;\n\n    /**\n     * The (1-based) character number in the result line.  For UTF-8 files,\n     * one multi-byte character counts as one character.\n     */\n    character: number;\n\n    /**\n     * The length of the match, in characters.  For UTF-8 files, one\n     * multi-byte character counts as one character.\n     */\n    length: number;\n\n    /**\n     * The text of the line containing the result.\n     */\n    lineText: string;\n}\n\nexport namespace SearchInWorkspaceResult {\n    /**\n     * Sort search in workspace results according to file, line, character position\n     * and then length.\n     */\n    export function compare(a: SearchInWorkspaceResult, b: SearchInWorkspaceResult) {\n        if (a.file !== b.file) {\n            return a.file < b.file ? -1 : 1;\n        }\n\n        if (a.line !== b.line) {\n            return a.line - b.line;\n        }\n\n        if (a.character !== b.character) {\n            return a.character - b.character;\n        }\n\n        return a.length - b.length;\n    }\n}\n\nexport const SearchInWorkspaceClient = Symbol('SearchInWorkspaceClient');\nexport interface SearchInWorkspaceClient {\n    /**\n     * Called by the server for every search match.\n     */\n    onResult(searchId: number, result: SearchInWorkspaceResult): void;\n\n    /**\n     * Called when no more search matches will come.\n     */\n    onDone(searchId: number, error?: string): void;\n}\n\nexport const SearchInWorkspaceServer = Symbol('SearchInWorkspaceServer');\nexport interface SearchInWorkspaceServer extends JsonRpcServer<SearchInWorkspaceClient> {\n    /**\n     * Start a search for WHAT in directory ROOT.  Return a unique search id.\n     */\n    search(what: string, rootUri: string, opts?: SearchInWorkspaceOptions): Promise<number>;\n\n    /**\n     * Cancel an ongoing search.\n     */\n    cancel(searchId: number): Promise<void>;\n\n    dispose(): void;\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017-2018 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n :root {\\n  --theia-current-search-match-color: var(--theia-word-highlight-color0);\\n  --theia-range-highlight: var(--theia-word-highlight-color1);\\n }\\n\\n.t-siw-search-container {\\n    color: var(--theia-ui-font-color1);\\n    padding: 5px;\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n    box-sizing: border-box;\\n}\\n\\n.t-siw-search-container input[type=\\\"text\\\"] {\\n    flex: 1;\\n    line-height: var(--theia-content-line-height);\\n    font-size: var(--theia-ui-font-size1);\\n    padding-left: 8px;\\n    color: var(--theia-ui-font-color1);\\n}\\n\\n.t-siw-search-container input[type=\\\"text\\\"]:focus {\\n    outline: none;\\n}\\n\\n.t-siw-search-container #search-input-field:focus {\\n    border: none;\\n}\\n\\n.t-siw-search-container #search-input-field {\\n    background: none;\\n    border: none;\\n}\\n\\n.t-siw-search-container .searchHeader {\\n    width: 100%;\\n    margin-bottom:  10px;\\n}\\n\\n.t-siw-search-container .searchHeader .controls.button-container {\\n    height: 22px;\\n    margin-bottom: 5px;\\n}\\n\\n.t-siw-search-container .searchHeader .controls .refresh {\\n    background: var(--theia-icon-refresh);\\n}\\n\\n.t-siw-search-container .searchHeader .controls .collapse-all {\\n    background: var(--theia-icon-collapse-all);\\n}\\n\\n.t-siw-search-container .searchHeader .controls .clear-all {\\n    background: var(--theia-icon-clear);\\n}\\n\\n.t-siw-search-container .searchHeader .search-field-container {\\n    background: var(--theia-layout-color2);\\n}\\n\\n.t-siw-search-container .searchHeader .search-field-container.focused {\\n    border-style: solid;\\n    border-width: var(--theia-border-width);\\n    border-color: var(--theia-accent-color3);\\n    margin: -1px;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field {\\n    display: flex;\\n    align-items:  center;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field:focus {\\n    border: none;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option {\\n    opacity: 0.7;\\n    cursor: pointer;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option.enabled {\\n    border: var(--theia-border-width) var(--theia-accent-color3) solid;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option:hover {\\n    opacity: 1;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option.match-case {\\n    background-image: var(--theia-icon-case-sensitive);\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option.whole-word {\\n    background-image: var(--theia-icon-whole-word);\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option.use-regexp {\\n    background-image: var(--theia-icon-regex);\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option-buttons {\\n    height: 23px;\\n    display: flex;\\n    align-items:  center;\\n    background-color: none;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field-container.tooManyResults {\\n    border-style: solid;\\n    border-width: var(--theia-border-width);\\n    margin: -1px;\\n    border-color: var(--theia-warn-color0);\\n}\\n\\n.t-siw-search-container .searchHeader .search-field-container .search-notification {\\n    height: 0;\\n    display: none;\\n    width: 100%;\\n    position: relative;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field-container.focused .search-notification.show {\\n    display: block;\\n}\\n\\n.t-siw-search-container .searchHeader .search-notification div{\\n    background-color: var(--theia-warn-color0);\\n    width: calc(100% + 2px);\\n    margin-left: -1px;\\n    color: var(--theia-warn-font-color0);\\n    z-index: 1000;\\n    position: absolute;\\n    border: 1px solid var(--theia-warn-color0);\\n    box-sizing: border-box;\\n    padding: 3px;\\n}\\n\\n.t-siw-search-container .searchHeader .button-container {\\n    text-align: right;\\n    padding-right: 5px;\\n    padding-top: 5px;\\n    display: flex;\\n    justify-content: flex-end;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .option,\\n.t-siw-search-container .searchHeader .button-container .btn {\\n    width: 21px;\\n    height: 21px;\\n    margin: 0 1px;\\n    display: inline-block;\\n    box-sizing: border-box;\\n    align-items: center;\\n    user-select: none;\\n    background-repeat: no-repeat;\\n    background-position: center;\\n    border: var(--theia-border-width) solid transparent;\\n}\\n\\n.t-siw-search-container .searchHeader .search-field .fa.option {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.t-siw-search-container .searchHeader .controls .btn{\\n    margin-left: 3px;\\n    opacity: 0.25;\\n    width: 18px\\n}\\n\\n.t-siw-search-container .searchHeader .controls .btn.enabled{\\n    opacity: 0.7;\\n    cursor: pointer;\\n}\\n\\n.t-siw-search-container .searchHeader .controls .btn.enabled:hover{\\n    opacity: 1;\\n}\\n\\n.t-siw-search-container .searchHeader .search-details .button-container {\\n    height: 5px;\\n}\\n\\n\\n.t-siw-search-container .searchHeader .search-details .button-container .btn{\\n    cursor: pointer;\\n}\\n\\n.t-siw-search-container .searchHeader .glob-field-container.hidden {\\n    display: none;\\n}\\n\\n.t-siw-search-container .searchHeader .glob-field-container .glob-field {\\n    margin-bottom: 8px;\\n    margin-left: 17px;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.t-siw-search-container .searchHeader .glob-field-container .glob-field .label {\\n    margin-bottom: 3px;\\n    user-select: none;\\n    font-size: var(--theia-ui-font-size0);\\n}\\n\\n.t-siw-search-container .resultContainer {\\n    height: 100%;\\n}\\n\\n.t-siw-search-container .result {\\n    overflow: hidden;\\n    width: 100%;\\n}\\n\\n.t-siw-search-container .result .result-head {\\n    display:flex;\\n}\\n\\n.t-siw-search-container .result .result-head .result-no {\\n    background: var(--theia-ui-expand-button-color);\\n    padding: 3px 8px;\\n    border-radius: 7px;\\n    font-size: var(--theia-ui-font-size0);\\n}\\n\\n.t-siw-search-container .result .result-head .expand-icon {\\n    margin: 0 3px;\\n    width: 7px;\\n}\\n\\n.t-siw-search-container .result .result-head .file-icon {\\n    margin: 0 3px;\\n}\\n\\n.t-siw-search-container .result .result-head .file-name {\\n    margin-right: 5px;\\n}\\n\\n.t-siw-search-container .result .result-head .file-path {\\n    color: var(--theia-ui-font-color2);\\n    font-size: var(--theia-ui-font-size0);\\n    margin-left: 3px;\\n}\\n\\n.t-siw-search-container .resultLine .match {\\n    background: var(--theia-word-highlight-match-color1);\\n    display: inline-block;\\n    line-height: normal;\\n}\\n\\n.t-siw-search-container .resultLine .match.strike-through {\\n    text-decoration: line-through;\\n}\\n\\n.t-siw-search-container .resultLine.selected .match {\\n    background: var(--theia-word-highlight-match-color1);\\n}\\n.t-siw-search-container .resultLine .replace-term {\\n    background: var(--theia-word-highlight-replace-color0);\\n}\\n\\n.noWrapInfo {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    width: 100%;\\n}\\n\\n.result-head-info {\\n    align-items: center;\\n}\\n\\n.search-in-workspace-editor-match {\\n    background: var(--theia-word-highlight-match-color0);\\n}\\n\\n.current-search-in-workspace-editor-match {\\n    background: var(--theia-current-search-match-color)\\n}\\n\\n.current-match-range-highlight {\\n    background: var(--theia-range-highlight);\\n}\\n\\n.result-node-buttons {\\n    display: none;\\n}\\n\\n.theia-TreeNode:hover .result-node-buttons {\\n    display: flex;\\n    justify-content: flex-end;\\n    flex: 1;\\n    align-items: center;\\n    align-self: center;\\n}\\n\\n.theia-TreeNode:hover .result-number {\\n    display: none;\\n}\\n\\n.theia-TreeNode .result-number {\\n    background-color: var(--theia-ui-font-color2);\\n    border-radius: 10px;\\n    padding: 0 5px;\\n    text-align: center;\\n    font-size: calc(var(--theia-ui-font-size0) * 0.8);\\n    color: var(--theia-inverse-ui-font-color0);\\n    font-weight: 400;\\n    min-width: 7px;\\n    height: 16px;\\n    line-height: calc(var(--theia-private-horizontal-tab-height) * 0.8);\\n    align-self: center;\\n}\\n\\n.result-node-buttons .remove-node {\\n    background-image: var(--theia-icon-close);\\n}\\n\\n.result-node-buttons > span {\\n    width: 15px;\\n    height: 15px;\\n    margin-right: 3px;\\n    background-repeat:  no-repeat;\\n    background-position: center;\\n    background-size: contain;\\n}\\n\\n.search-and-replace-container {\\n    display: flex;\\n}\\n\\n.replace-toggle {\\n    display: flex;\\n    align-items:  center;\\n    width: 15px;\\n    min-width: 15px;\\n    justify-content: center;\\n    margin-right: 2px;\\n    box-sizing: border-box;\\n}\\n\\n.replace-toggle:hover {\\n    background: var(--theia-layout-color2);\\n}\\n\\n.search-and-replace-fields {\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n}\\n\\n.replace-field {\\n    display: flex;\\n    margin-top: 5px;\\n}\\n\\n.replace-field.hidden {\\n    display: none;\\n}\\n\\n.replace-all-button-container {\\n    width: 25px;\\n    display: flex;\\n    align-items: center;\\n    justify-content:  center;\\n}\\n\\n.replace-all-button {\\n    width:  100%;\\n    height: 100%;\\n    display: inline-block;\\n    background: var(--theia-icon-replace-all) no-repeat center;\\n}\\n\\n.result-node-buttons .replace-result {\\n    background-image: var(--theia-icon-replace);\\n}\\n\\n.replace-all-button.disabled {\\n    opacity: 0.5;\\n}\\n\\n.search-in-workspace-tab-icon::before {\\n    content: \\\"\\\\F002\\\"\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}