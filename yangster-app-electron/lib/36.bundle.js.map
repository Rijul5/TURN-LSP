{"version":3,"sources":["webpack:///../node_modules/@theia/file-search/src/browser/file-search-frontend-module.ts","webpack:///../node_modules/@theia/file-search/src/browser/quick-file-open-contribution.ts","webpack:///../node_modules/@theia/file-search/src/browser/quick-file-open.ts","webpack:///../node_modules/@theia/file-search/src/common/file-search-service.ts"],"names":[],"mappings":"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","file":"36.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, interfaces } from 'inversify';\nimport { CommandContribution } from '@theia/core/lib/common';\nimport { WebSocketConnectionProvider, KeybindingContribution, QuickOpenContribution } from '@theia/core/lib/browser';\nimport { QuickFileOpenFrontendContribution } from './quick-file-open-contribution';\nimport { QuickFileOpenService } from './quick-file-open';\nimport { fileSearchServicePath, FileSearchService } from '../common/file-search-service';\n\nexport default new ContainerModule((bind: interfaces.Bind) => {\n    bind(FileSearchService).toDynamicValue(ctx => {\n        const provider = ctx.container.get(WebSocketConnectionProvider);\n        return provider.createProxy<FileSearchService>(fileSearchServicePath);\n    }).inSingletonScope();\n\n    bind(QuickFileOpenFrontendContribution).toSelf().inSingletonScope();\n    [CommandContribution, KeybindingContribution, QuickOpenContribution].forEach(serviceIdentifier =>\n        bind(serviceIdentifier).toService(QuickFileOpenFrontendContribution)\n    );\n\n    bind(QuickFileOpenService).toSelf().inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { QuickFileOpenService, quickFileOpen } from './quick-file-open';\nimport { CommandRegistry, CommandContribution } from '@theia/core/lib/common';\nimport { KeybindingRegistry, KeybindingContribution, QuickOpenContribution, QuickOpenHandlerRegistry } from '@theia/core/lib/browser';\n\n@injectable()\nexport class QuickFileOpenFrontendContribution implements CommandContribution, KeybindingContribution, QuickOpenContribution {\n\n    @inject(QuickFileOpenService)\n    protected readonly quickFileOpenService: QuickFileOpenService;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(quickFileOpen, {\n            execute: (args: any[]) => {\n                if (args) {\n                    const [fileURI] = args;\n                    return this.quickFileOpenService.openFile(new URI(fileURI));\n                }\n                return this.quickFileOpenService.open();\n            },\n            isEnabled: () => this.quickFileOpenService.isEnabled()\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: quickFileOpen.id,\n            keybinding: 'ctrlcmd+p'\n        });\n    }\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this.quickFileOpenService, true);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport {\n    QuickOpenModel, QuickOpenItem, QuickOpenMode, PrefixQuickOpenService,\n    OpenerService, KeybindingRegistry, QuickOpenGroupItem, QuickOpenGroupItemOptions, QuickOpenItemOptions, QuickOpenHandler, QuickOpenOptions, Keybinding\n} from '@theia/core/lib/browser';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSearchService } from '../common/file-search-service';\nimport { CancellationTokenSource } from '@theia/core/lib/common';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { Command } from '@theia/core/lib/common';\nimport { NavigationLocationService } from '@theia/editor/lib/browser/navigation/navigation-location-service';\nimport * as fuzzy from 'fuzzy';\n\nexport const quickFileOpen: Command = {\n    id: 'file-search.openFile',\n    category: 'File',\n    label: 'Open File...'\n};\n\n@injectable()\nexport class QuickFileOpenService implements QuickOpenModel, QuickOpenHandler {\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n    @inject(PrefixQuickOpenService)\n    protected readonly quickOpenService: PrefixQuickOpenService;\n    @inject(FileSearchService)\n    protected readonly fileSearchService: FileSearchService;\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n    @inject(NavigationLocationService)\n    protected readonly navigationLocationService: NavigationLocationService;\n\n    /**\n     * Whether to hide .gitignored (and other ignored) files.\n     */\n    protected hideIgnoredFiles: boolean = true;\n\n    /**\n     * Whether the dialog is currently open.\n     */\n    protected isOpen: boolean = false;\n\n    /**\n     * The current lookFor string input by the user.\n     */\n    protected currentLookFor: string = '';\n\n    readonly prefix: string = '...';\n\n    get description(): string {\n        return 'Open File';\n    }\n\n    getModel(): QuickOpenModel {\n        return this;\n    }\n\n    getOptions(): QuickOpenOptions {\n        let placeholder = 'File name to search.';\n        const keybinding = this.getKeyCommand();\n        if (keybinding) {\n            placeholder += ` (Press ${keybinding} to show/hide ignored files)`;\n        }\n        return {\n            placeholder,\n            fuzzyMatchLabel: true,\n            fuzzyMatchDescription: true,\n            onClose: () => {\n                this.isOpen = false;\n                this.cancelIndicator.cancel();\n            }\n        };\n    }\n\n    isEnabled(): boolean {\n        return this.workspaceService.opened;\n    }\n\n    open(): void {\n        // Triggering the keyboard shortcut while the dialog is open toggles\n        // showing the ignored files.\n        if (this.isOpen) {\n            this.hideIgnoredFiles = !this.hideIgnoredFiles;\n        } else {\n            this.hideIgnoredFiles = true;\n            this.currentLookFor = '';\n            this.isOpen = true;\n        }\n\n        this.quickOpenService.open(this.currentLookFor);\n    }\n\n    /**\n     * Get a string (suitable to show to the user) representing the keyboard\n     * shortcut used to open the quick file open menu.\n     */\n    protected getKeyCommand(): string | undefined {\n        const keyCommand = this.keybindingRegistry.getKeybindingsForCommand(quickFileOpen.id);\n        if (keyCommand) {\n            // We only consider the first keybinding.\n            const accel = Keybinding.acceleratorFor(keyCommand[0], '+');\n            return accel.join(' ');\n        }\n\n        return undefined;\n    }\n\n    private cancelIndicator = new CancellationTokenSource();\n\n    public async onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): Promise<void> {\n        const workspaceFolder = this.workspaceService.tryGetRoots()[0];\n        if (!workspaceFolder) {\n            return;\n        }\n\n        this.currentLookFor = lookFor;\n\n        this.cancelIndicator.cancel();\n        this.cancelIndicator = new CancellationTokenSource();\n        const token = this.cancelIndicator.token;\n\n        const rootUri = workspaceFolder.uri;\n        const root = new URI(rootUri);\n        const alreadyCollected = new Set<string>();\n\n        const recentlyUsedItems: QuickOpenItem[] = [];\n        const locations = [...this.navigationLocationService.locations()].reverse();\n        for (const location of locations) {\n            const uriString = location.uri.toString();\n            if (!alreadyCollected.has(uriString) && fuzzy.test(lookFor, uriString)) {\n                recentlyUsedItems.push(await this.toItem(location.uri, recentlyUsedItems.length === 0 ? 'recently opened' : undefined));\n                alreadyCollected.add(uriString);\n            }\n        }\n        if (lookFor.length > 0) {\n            const handler = async (result: string[]) => {\n                if (!token.isCancellationRequested) {\n                    const fileSearchResultItems: QuickOpenItem[] = [];\n                    for (const p of result) {\n                        const uri = root.withPath(root.path.join(p));\n                        const uriString = uri.toString();\n                        if (!alreadyCollected.has(uriString)) {\n                            fileSearchResultItems.push(await this.toItem(uri, fileSearchResultItems.length === 0 ? 'file results' : undefined));\n                            alreadyCollected.add(uriString);\n                        }\n                    }\n                    acceptor([...recentlyUsedItems, ...fileSearchResultItems]);\n                }\n            };\n            this.fileSearchService.find(lookFor, {\n                rootUri,\n                fuzzyMatch: true,\n                limit: 200,\n                useGitIgnore: this.hideIgnoredFiles,\n            }, token).then(handler);\n        } else {\n            acceptor(recentlyUsedItems);\n        }\n    }\n\n    protected getRunFunction(uri: URI) {\n        return (mode: QuickOpenMode) => {\n            if (mode !== QuickOpenMode.OPEN) {\n                return false;\n            }\n            this.openFile(uri);\n            return true;\n        };\n    }\n\n    openFile(uri: URI) {\n        this.openerService.getOpener(uri).then(opener => opener.open(uri));\n    }\n\n    private async toItem(uriOrString: URI | string, group?: string) {\n        const uri = uriOrString instanceof URI ? uriOrString : new URI(uriOrString);\n        const options: QuickOpenItemOptions = {\n            label: this.labelProvider.getName(uri),\n            iconClass: await this.labelProvider.getIcon(uri) + ' file-icon',\n            description: this.labelProvider.getLongName(uri.parent),\n            tooltip: uri.path.toString(),\n            uri: uri,\n            hidden: false,\n            run: this.getRunFunction(uri)\n        };\n        if (group) {\n            return new QuickOpenGroupItem<QuickOpenGroupItemOptions>({\n                ...options,\n                groupLabel: group\n            });\n        } else {\n            return new QuickOpenItem<QuickOpenItemOptions>(options);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CancellationToken } from '@theia/core';\n\nexport const fileSearchServicePath = '/services/search';\n\n/**\n * The JSON-RPC file search service interface.\n */\nexport interface FileSearchService {\n\n    /**\n     * finds files by a given search pattern.\n     * @return the matching paths, relative to the given `options.rootUri`.\n     */\n    find(searchPattern: string, options: FileSearchService.Options, cancellationToken?: CancellationToken): Promise<string[]>;\n\n}\n\nexport const FileSearchService = Symbol('FileSearchService');\nexport namespace FileSearchService {\n    export interface Options {\n        rootUri: string,\n        fuzzyMatch?: boolean\n        limit?: number\n        useGitIgnore?: boolean\n        defaultIgnorePatterns?: string[]\n    }\n}\n"],"sourceRoot":""}