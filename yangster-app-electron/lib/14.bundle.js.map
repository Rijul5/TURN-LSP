{"version":3,"sources":["webpack:///../node_modules/@theia/monaco/lib/browser/monaco-editor-model.js","webpack:///../node_modules/@theia/monaco/lib/browser/monaco-editor.js","webpack:///../node_modules/@theia/monaco/src/browser/monaco-text-model-service.ts","webpack:///../node_modules/@theia/monaco/src/browser/textmate/textmate-contribution.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D,oCAAoC,mBAAO,CAAC,gGAA6B;AACzE;AACA,aAAa,mBAAO,CAAC,oEAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,kCAAkC,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,0CAA0C,EAAE;AAC5H;AACA,mFAAmF,qBAAqwEAAwE,cAAc,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4BAA4B,EAAE;AAC1F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,iCAAiC;AAC/F;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D,qCAAqC,oCAAoC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,uDAAuD,EAAE;AAC3H,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wCAAwC,kDAAkD;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qCAAqC;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;ACnca;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAoB;AAC7C,eAAe,mBAAO,CAAC,+EAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,YAAY,aAAa,gBAAgB;AACjH;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6EAA6E,wBAAwB,EAAE;AACvG,qEAAqE,wBAAwB,EAAE;AAC/F;AACA;AACA,wDAAwD,mGAAmG;AAC3J,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,aAAa,2MAA2M;AAC3P;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iCAAiC,YAAY,sBAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB,eAAe,6CAA6C,GAAG,EAAE;AACrJ;AACA;AACA;AACA,0CAA0C,8BAA8B,2BAA2B,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C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","file":"14.bundle.js","sourcesContent":["\"use strict\";\n/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nexports.TextDocumentSaveReason = vscode_languageserver_types_1.TextDocumentSaveReason;\nvar core_1 = require(\"@theia/core\");\nvar MonacoEditorModel = /** @class */ (function () {\n    function MonacoEditorModel(resource, m2p, p2m) {\n        var _this = this;\n        this.resource = resource;\n        this.m2p = m2p;\n        this.p2m = p2m;\n        this.autoSave = 'on';\n        this.autoSaveDelay = 500;\n        this.toDispose = new core_1.DisposableCollection();\n        this.toDisposeOnAutoSave = new core_1.DisposableCollection();\n        this.onDidChangeContentEmitter = new core_1.Emitter();\n        this.onDidChangeContent = this.onDidChangeContentEmitter.event;\n        this.onDidSaveModelEmitter = new core_1.Emitter();\n        this.onDidSaveModel = this.onDidSaveModelEmitter.event;\n        this.onWillSaveModelEmitter = new core_1.Emitter();\n        this.onWillSaveModel = this.onWillSaveModelEmitter.event;\n        this._dirty = false;\n        this.onDirtyChangedEmitter = new core_1.Emitter();\n        this.pendingOperation = Promise.resolve();\n        this.syncCancellationTokenSource = new core_1.CancellationTokenSource();\n        this.ignoreDirtyEdits = false;\n        this.saveCancellationTokenSource = new core_1.CancellationTokenSource();\n        this.ignoreContentChanges = false;\n        this.contentChanges = [];\n        this.toDispose.push(resource);\n        this.toDispose.push(this.toDisposeOnAutoSave);\n        this.toDispose.push(this.onDidChangeContentEmitter);\n        this.toDispose.push(this.onDidSaveModelEmitter);\n        this.toDispose.push(this.onWillSaveModelEmitter);\n        this.toDispose.push(this.onDirtyChangedEmitter);\n        this.resolveModel = resource.readContents().then(function (content) { return _this.initialize(content); });\n    }\n    MonacoEditorModel.prototype.dispose = function () {\n        this.toDispose.dispose();\n    };\n    /**\n     * #### Important\n     * Only this method can create an instance of `monaco.editor.IModel`,\n     * there should not be other calls to `monaco.editor.createModel`.\n     */\n    MonacoEditorModel.prototype.initialize = function (content) {\n        var _this = this;\n        if (!this.toDispose.disposed) {\n            this.model = monaco.editor.createModel(content, undefined, monaco.Uri.parse(this.resource.uri.toString()));\n            this.toDispose.push(this.model);\n            this.toDispose.push(this.model.onDidChangeContent(function (event) { return _this.fireDidChangeContent(event); }));\n            if (this.resource.onDidChangeContents) {\n                this.toDispose.push(this.resource.onDidChangeContents(function () { return _this.sync(); }));\n            }\n        }\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"dirty\", {\n        get: function () {\n            return this._dirty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.setDirty = function (dirty) {\n        this._dirty = dirty;\n        this.onDirtyChangedEmitter.fire(undefined);\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"onDirtyChanged\", {\n        get: function () {\n            return this.onDirtyChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"uri\", {\n        get: function () {\n            return this.model.uri.toString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId !== undefined ? this._languageId : this.model.getModeId();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * It's a hack to dispatch close notification with an old language id, don't use it.\n     */\n    MonacoEditorModel.prototype.setLanguageId = function (languageId) {\n        this._languageId = languageId;\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"version\", {\n        get: function () {\n            return this.model.getVersionId();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.getText = function () {\n        return this.model.getValue();\n    };\n    MonacoEditorModel.prototype.positionAt = function (offset) {\n        var _a = this.model.getPositionAt(offset), lineNumber = _a.lineNumber, column = _a.column;\n        return this.m2p.asPosition(lineNumber, column);\n    };\n    MonacoEditorModel.prototype.offsetAt = function (position) {\n        return this.model.getOffsetAt(this.p2m.asPosition(position));\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"lineCount\", {\n        get: function () {\n            return this.model.getLineCount();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.getLineContent = function (lineNumber) {\n        return this.model.getLineContent(lineNumber);\n    };\n    MonacoEditorModel.prototype.getLineMaxColumn = function (lineNumber) {\n        return this.model.getLineMaxColumn(lineNumber);\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"readOnly\", {\n        get: function () {\n            return this.resource.saveContents === undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"onDispose\", {\n        get: function () {\n            return this.toDispose.onDispose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"textEditorModel\", {\n        get: function () {\n            return this.model;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.load = function () {\n        var _this = this;\n        return monaco.Promise.wrap(this.resolveModel).then(function () { return _this; });\n    };\n    MonacoEditorModel.prototype.save = function () {\n        return this.scheduleSave(vscode_languageserver_types_1.TextDocumentSaveReason.Manual);\n    };\n    MonacoEditorModel.prototype.run = function (operation) {\n        var _this = this;\n        return this.pendingOperation = this.pendingOperation.then(function () { return __awaiter(_this, void 0, void 0, function () {\n            var e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, operation()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_1 = _a.sent();\n                        console.error(e_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    MonacoEditorModel.prototype.cancelSync = function () {\n        this.syncCancellationTokenSource.cancel();\n        this.syncCancellationTokenSource = new core_1.CancellationTokenSource();\n        return this.syncCancellationTokenSource.token;\n    };\n    MonacoEditorModel.prototype.sync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var token;\n            var _this = this;\n            return __generator(this, function (_a) {\n                token = this.cancelSync();\n                return [2 /*return*/, this.run(function () { return _this.doSync(token); })];\n            });\n        });\n    };\n    MonacoEditorModel.prototype.doSync = function (token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var newText, value, range;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (token.isCancellationRequested || this._dirty) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.readContents()];\n                    case 1:\n                        newText = _a.sent();\n                        if (newText === undefined || token.isCancellationRequested || this._dirty) {\n                            return [2 /*return*/];\n                        }\n                        value = this.model.getValue();\n                        if (value === newText) {\n                            return [2 /*return*/];\n                        }\n                        range = this.m2p.asRange(this.model.getFullModelRange());\n                        this.applyEdits([this.p2m.asTextEdit({ range: range, newText: newText })], {\n                            ignoreDirty: true,\n                            ignoreContentChanges: true\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.readContents = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.resource.readContents()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        e_2 = _a.sent();\n                        if (core_1.ResourceError.NotFound.is(e_2)) {\n                            return [2 /*return*/, undefined];\n                        }\n                        throw e_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.markAsDirty = function () {\n        if (this.ignoreDirtyEdits) {\n            return;\n        }\n        this.cancelSync();\n        this.setDirty(true);\n        this.doAutoSave();\n    };\n    MonacoEditorModel.prototype.doAutoSave = function () {\n        var _this = this;\n        if (this.autoSave === 'on') {\n            var token_1 = this.cancelSave();\n            this.toDisposeOnAutoSave.dispose();\n            var handle_1 = window.setTimeout(function () {\n                _this.scheduleSave(vscode_languageserver_types_1.TextDocumentSaveReason.AfterDelay, token_1);\n            }, this.autoSaveDelay);\n            this.toDisposeOnAutoSave.push(core_1.Disposable.create(function () {\n                return window.clearTimeout(handle_1);\n            }));\n        }\n    };\n    MonacoEditorModel.prototype.cancelSave = function () {\n        this.saveCancellationTokenSource.cancel();\n        this.saveCancellationTokenSource = new core_1.CancellationTokenSource();\n        return this.saveCancellationTokenSource.token;\n    };\n    MonacoEditorModel.prototype.scheduleSave = function (reason, token) {\n        var _this = this;\n        if (token === void 0) { token = this.cancelSave(); }\n        return this.run(function () { return _this.doSave(reason, token); });\n    };\n    MonacoEditorModel.prototype.pushContentChanges = function (contentChanges) {\n        var _a;\n        if (!this.ignoreContentChanges) {\n            (_a = this.contentChanges).push.apply(_a, __spread(contentChanges));\n        }\n    };\n    MonacoEditorModel.prototype.popContentChanges = function () {\n        var contentChanges = this.contentChanges;\n        if (contentChanges.length !== 0) {\n            this.contentChanges = [];\n        }\n        return contentChanges;\n    };\n    MonacoEditorModel.prototype.fireDidChangeContent = function (event) {\n        var changeContentEvent = this.asContentChangedEvent(event);\n        this.onDidChangeContentEmitter.fire(changeContentEvent);\n        this.pushContentChanges(changeContentEvent.contentChanges);\n        this.markAsDirty();\n    };\n    MonacoEditorModel.prototype.asContentChangedEvent = function (event) {\n        var _this = this;\n        var contentChanges = event.changes.map(function (change) { return _this.asTextDocumentContentChangeEvent(change); });\n        return { model: this, contentChanges: contentChanges };\n    };\n    MonacoEditorModel.prototype.asTextDocumentContentChangeEvent = function (change) {\n        var range = this.m2p.asRange(change.range);\n        var rangeLength = change.rangeLength;\n        var text = change.text;\n        return { range: range, rangeLength: rangeLength, text: text };\n    };\n    MonacoEditorModel.prototype.applyEdits = function (operations, options) {\n        var resolvedOptions = __assign({ ignoreDirty: false, ignoreContentChanges: false }, options);\n        var _a = this, ignoreDirtyEdits = _a.ignoreDirtyEdits, ignoreContentChanges = _a.ignoreContentChanges;\n        this.ignoreDirtyEdits = resolvedOptions.ignoreDirty;\n        this.ignoreContentChanges = resolvedOptions.ignoreContentChanges;\n        try {\n            return this.model.applyEdits(operations);\n        }\n        finally {\n            this.ignoreDirtyEdits = ignoreDirtyEdits;\n            this.ignoreContentChanges = ignoreContentChanges;\n        }\n    };\n    MonacoEditorModel.prototype.doSave = function (reason, token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var changes, content;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (token.isCancellationRequested || !this.resource.saveContents || !this.dirty) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.fireWillSaveModel(reason, token)];\n                    case 1:\n                        _a.sent();\n                        if (token.isCancellationRequested) {\n                            return [2 /*return*/];\n                        }\n                        changes = this.popContentChanges();\n                        if (changes.length === 0) {\n                            return [2 /*return*/];\n                        }\n                        content = this.model.getValue();\n                        return [4 /*yield*/, core_1.Resource.save(this.resource, { changes: changes, content: content }, token)];\n                    case 2:\n                        _a.sent();\n                        if (token.isCancellationRequested) {\n                            return [2 /*return*/];\n                        }\n                        this.setDirty(false);\n                        this.fireDidSaveModel();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.fireWillSaveModel = function (reason, token) {\n        var _this = this;\n        var model = this;\n        return new Promise(function (resolve) {\n            _this.onWillSaveModelEmitter.fire({\n                model: model, reason: reason,\n                waitUntil: function (thenable) {\n                    return thenable.then(function (operations) {\n                        if (token.isCancellationRequested) {\n                            resolve();\n                        }\n                        _this.applyEdits(operations, {\n                            ignoreDirty: true\n                        });\n                        resolve();\n                    });\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.fireDidSaveModel = function () {\n        this.onDidSaveModelEmitter.fire(this.model);\n    };\n    return MonacoEditorModel;\n}());\nexports.MonacoEditorModel = MonacoEditorModel;\n//# sourceMappingURL=monaco-editor-model.js.map","\"use strict\";\n/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domutils_1 = require(\"@phosphor/domutils\");\nvar common_1 = require(\"@theia/core/lib/common\");\nvar MonacoEditor = /** @class */ (function () {\n    function MonacoEditor(uri, document, node, m2p, p2m, options, override) {\n        this.uri = uri;\n        this.document = document;\n        this.node = node;\n        this.m2p = m2p;\n        this.p2m = p2m;\n        this.toDispose = new common_1.DisposableCollection();\n        this.onCursorPositionChangedEmitter = new common_1.Emitter();\n        this.onSelectionChangedEmitter = new common_1.Emitter();\n        this.onFocusChangedEmitter = new common_1.Emitter();\n        this.onDocumentContentChangedEmitter = new common_1.Emitter();\n        this.onMouseDownEmitter = new common_1.Emitter();\n        this.onLanguageChangedEmitter = new common_1.Emitter();\n        this.onLanguageChanged = this.onLanguageChangedEmitter.event;\n        this.documents = new Set();\n        this.toDispose.pushAll([\n            this.onCursorPositionChangedEmitter,\n            this.onSelectionChangedEmitter,\n            this.onFocusChangedEmitter,\n            this.onDocumentContentChangedEmitter,\n            this.onMouseDownEmitter,\n            this.onLanguageChangedEmitter\n        ]);\n        this.documents.add(document);\n        this.autoSizing = options && options.autoSizing !== undefined ? options.autoSizing : false;\n        this.minHeight = options && options.minHeight !== undefined ? options.minHeight : -1;\n        this.maxHeight = options && options.maxHeight !== undefined ? options.maxHeight : -1;\n        this.toDispose.push(this.create(options, override));\n        this.addHandlers(this.editor);\n    }\n    MonacoEditor.prototype.create = function (options, override) {\n        return this.editor = monaco.editor.create(this.node, __assign({}, options, { lightbulb: { enabled: true }, fixedOverflowWidgets: true, scrollbar: {\n                useShadows: false,\n                verticalHasArrows: false,\n                horizontalHasArrows: false,\n                verticalScrollbarSize: 10,\n                horizontalScrollbarSize: 10\n            } }), override);\n    };\n    MonacoEditor.prototype.addHandlers = function (codeEditor) {\n        var _this = this;\n        this.toDispose.push(codeEditor.onDidChangeModelLanguage(function (e) {\n            return _this.onLanguageChangedEmitter.fire(e.newLanguage);\n        }));\n        this.toDispose.push(codeEditor.onDidChangeConfiguration(function () { return _this.refresh(); }));\n        this.toDispose.push(codeEditor.onDidChangeModel(function () { return _this.refresh(); }));\n        this.toDispose.push(codeEditor.onDidChangeModelContent(function (e) {\n            _this.refresh();\n            _this.onDocumentContentChangedEmitter.fire({ document: _this.document, contentChanges: e.changes.map(_this.mapModelContentChange.bind(_this)) });\n        }));\n        this.toDispose.push(codeEditor.onDidChangeCursorPosition(function () {\n            return _this.onCursorPositionChangedEmitter.fire(_this.cursor);\n        }));\n        this.toDispose.push(codeEditor.onDidChangeCursorSelection(function () {\n            return _this.onSelectionChangedEmitter.fire(_this.selection);\n        }));\n        this.toDispose.push(codeEditor.onDidFocusEditorText(function () {\n            return _this.onFocusChangedEmitter.fire(_this.isFocused());\n        }));\n        this.toDispose.push(codeEditor.onDidBlurEditorText(function () {\n            return _this.onFocusChangedEmitter.fire(_this.isFocused());\n        }));\n        this.toDispose.push(codeEditor.onMouseDown(function (e) {\n            var _a = e.target, position = _a.position, range = _a.range;\n            _this.onMouseDownEmitter.fire({\n                target: __assign({}, e.target, { mouseColumn: _this.m2p.asPosition(undefined, e.target.mouseColumn).character, range: range && _this.m2p.asRange(range), position: position && _this.m2p.asPosition(position.lineNumber, position.column) }),\n                event: e.event.browserEvent\n            });\n        }));\n    };\n    MonacoEditor.prototype.mapModelContentChange = function (change) {\n        return {\n            range: this.m2p.asRange(change.range),\n            rangeLength: change.rangeLength,\n            text: change.text\n        };\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"onDispose\", {\n        get: function () {\n            return this.toDispose.onDispose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onDocumentContentChanged\", {\n        get: function () {\n            return this.onDocumentContentChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"cursor\", {\n        get: function () {\n            var _a = this.editor.getPosition(), lineNumber = _a.lineNumber, column = _a.column;\n            return this.m2p.asPosition(lineNumber, column);\n        },\n        set: function (cursor) {\n            var position = this.p2m.asPosition(cursor);\n            this.editor.setPosition(position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onCursorPositionChanged\", {\n        get: function () {\n            return this.onCursorPositionChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"selection\", {\n        get: function () {\n            return this.m2p.asRange(this.editor.getSelection());\n        },\n        set: function (selection) {\n            var range = this.p2m.asRange(selection);\n            this.editor.setSelection(range);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onSelectionChanged\", {\n        get: function () {\n            return this.onSelectionChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditor.prototype.revealPosition = function (raw, options) {\n        if (options === void 0) { options = { vertical: 'center' }; }\n        var position = this.p2m.asPosition(raw);\n        switch (options.vertical) {\n            case 'auto':\n                this.editor.revealPosition(position);\n                break;\n            case 'center':\n                this.editor.revealPositionInCenter(position);\n                break;\n            case 'centerIfOutsideViewport':\n                this.editor.revealPositionInCenterIfOutsideViewport(position);\n                break;\n        }\n    };\n    MonacoEditor.prototype.revealRange = function (raw, options) {\n        if (options === void 0) { options = { at: 'center' }; }\n        var range = this.p2m.asRange(raw);\n        switch (options.at) {\n            case 'top':\n                this.editor.revealRangeAtTop(range);\n                break;\n            case 'center':\n                this.editor.revealRangeInCenter(range);\n                break;\n            case 'centerIfOutsideViewport':\n                this.editor.revealRangeInCenterIfOutsideViewport(range);\n                break;\n            case 'auto':\n                this.editor.revealRange(range);\n                break;\n        }\n    };\n    MonacoEditor.prototype.focus = function () {\n        this.editor.focus();\n    };\n    MonacoEditor.prototype.blur = function () {\n        var node = this.editor.getDomNode();\n        var textarea = node.querySelector('textarea');\n        textarea.blur();\n    };\n    MonacoEditor.prototype.isFocused = function (_a) {\n        var strict = (_a === void 0 ? { strict: false } : _a).strict;\n        if (!this.editor.hasTextFocus()) {\n            return false;\n        }\n        if (strict) {\n            return !this.isSuggestWidgetVisible() && !this.isFindWidgetVisible() && !this.isRenameInputVisible();\n        }\n        return true;\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"onFocusChanged\", {\n        get: function () {\n            return this.onFocusChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onMouseDown\", {\n        get: function () {\n            return this.onMouseDownEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `true` if the suggest widget is visible in the editor. Otherwise, `false`.\n     */\n    MonacoEditor.prototype.isSuggestWidgetVisible = function () {\n        var widget = this.editor.getContribution('editor.contrib.suggestController')._widget;\n        return widget ? widget.suggestWidgetVisible.get() : false;\n    };\n    /**\n     * `true` if the find (and replace) widget is visible in the editor. Otherwise, `false`.\n     */\n    MonacoEditor.prototype.isFindWidgetVisible = function () {\n        return this.editor.getContribution('editor.contrib.findController')._findWidgetVisible.get();\n    };\n    /**\n     * `true` if the name rename refactoring input HTML element is visible. Otherwise, `false`.\n     */\n    MonacoEditor.prototype.isRenameInputVisible = function () {\n        return this.editor.getContribution('editor.contrib.renameController')._renameInputVisible.get();\n    };\n    MonacoEditor.prototype.dispose = function () {\n        this.toDispose.dispose();\n    };\n    MonacoEditor.prototype.getControl = function () {\n        return this.editor;\n    };\n    MonacoEditor.prototype.refresh = function () {\n        this.autoresize();\n    };\n    MonacoEditor.prototype.resizeToFit = function () {\n        this.autoresize();\n    };\n    MonacoEditor.prototype.setSize = function (dimension) {\n        this.resize(dimension);\n    };\n    MonacoEditor.prototype.autoresize = function () {\n        if (this.autoSizing) {\n            // tslint:disable-next-line:no-null-keyword\n            this.resize(null);\n        }\n    };\n    MonacoEditor.prototype.resize = function (dimension) {\n        if (this.node) {\n            var layoutSize = this.computeLayoutSize(this.node, dimension);\n            this.editor.layout(layoutSize);\n        }\n    };\n    MonacoEditor.prototype.computeLayoutSize = function (hostNode, dimension) {\n        if (dimension && dimension.width >= 0 && dimension.height >= 0) {\n            return dimension;\n        }\n        var boxSizing = domutils_1.ElementExt.boxSizing(hostNode);\n        var width = (!dimension || dimension.width < 0) ?\n            this.getWidth(hostNode, boxSizing) :\n            dimension.width;\n        var height = (!dimension || dimension.height < 0) ?\n            this.getHeight(hostNode, boxSizing) :\n            dimension.height;\n        return { width: width, height: height };\n    };\n    MonacoEditor.prototype.getWidth = function (hostNode, boxSizing) {\n        return hostNode.offsetWidth - boxSizing.horizontalSum;\n    };\n    MonacoEditor.prototype.getHeight = function (hostNode, boxSizing) {\n        if (!this.autoSizing) {\n            return hostNode.offsetHeight - boxSizing.verticalSum;\n        }\n        var configuration = this.editor.getConfiguration();\n        var lineHeight = configuration.lineHeight;\n        var lineCount = this.editor.getModel().getLineCount();\n        var contentHeight = lineHeight * lineCount;\n        var horizontalScrollbarHeight = configuration.layoutInfo.horizontalScrollbarHeight;\n        var editorHeight = contentHeight + horizontalScrollbarHeight;\n        if (this.minHeight >= 0) {\n            var minHeight = lineHeight * this.minHeight + horizontalScrollbarHeight;\n            if (editorHeight < minHeight) {\n                return minHeight;\n            }\n        }\n        if (this.maxHeight >= 0) {\n            var maxHeight = lineHeight * this.maxHeight + horizontalScrollbarHeight;\n            return Math.min(maxHeight, editorHeight);\n        }\n        return editorHeight;\n    };\n    MonacoEditor.prototype.isActionSupported = function (id) {\n        var action = this.editor.getAction(id);\n        return !!action && action.isSupported();\n    };\n    MonacoEditor.prototype.runAction = function (id) {\n        var action = this.editor.getAction(id);\n        if (action && action.isSupported()) {\n            return action.run();\n        }\n        return monaco.Promise.as(undefined);\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"commandService\", {\n        get: function () {\n            return this.editor._commandService;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"instantiationService\", {\n        get: function () {\n            return this.editor._instantiationService;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditor.prototype.deltaDecorations = function (params) {\n        var oldDecorations = params.oldDecorations;\n        var newDecorations = this.toDeltaDecorations(params);\n        return this.editor.deltaDecorations(oldDecorations, newDecorations);\n    };\n    MonacoEditor.prototype.toDeltaDecorations = function (params) {\n        var _this = this;\n        return params.newDecorations.map(function (decoration) { return (__assign({}, decoration, { range: _this.p2m.asRange(decoration.range) })); });\n    };\n    MonacoEditor.prototype.getLinesDecorations = function (startLineNumber, endLineNumber) {\n        var _this = this;\n        var toPosition = function (line) { return _this.p2m.asPosition({ line: line, character: 0 }); };\n        var start = toPosition(startLineNumber).lineNumber;\n        var end = toPosition(endLineNumber).lineNumber;\n        return this.editor\n            .getModel()\n            .getLinesDecorations(start, end)\n            .map(this.toEditorDecoration.bind(this));\n    };\n    MonacoEditor.prototype.toEditorDecoration = function (decoration) {\n        var range = this.m2p.asRange(decoration.range);\n        var id = decoration.id, options = decoration.options;\n        return {\n            options: options,\n            range: range,\n            id: id\n        };\n    };\n    MonacoEditor.prototype.getVisibleColumn = function (position) {\n        return this.editor.getVisibleColumnFromPosition(this.p2m.asPosition(position));\n    };\n    MonacoEditor.prototype.replaceText = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var edits;\n            var _this = this;\n            return __generator(this, function (_a) {\n                edits = params.replaceOperations.map(function (param) {\n                    var range = monaco.Range.fromPositions(_this.p2m.asPosition(param.range.start), _this.p2m.asPosition(param.range.end));\n                    return {\n                        forceMoveMarkers: true,\n                        identifier: {\n                            major: range.startLineNumber,\n                            minor: range.startColumn\n                        },\n                        range: range,\n                        text: param.text\n                    };\n                });\n                return [2 /*return*/, this.editor.executeEdits(params.source, edits)];\n            });\n        });\n    };\n    MonacoEditor.prototype.executeEdits = function (edits) {\n        return this.editor.executeEdits('MonacoEditor', this.p2m.asTextEdits(edits));\n    };\n    MonacoEditor.prototype.storeViewState = function () {\n        return this.editor.saveViewState();\n    };\n    MonacoEditor.prototype.restoreViewState = function (state) {\n        this.editor.restoreViewState(state);\n    };\n    MonacoEditor.prototype.detectLanguage = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var filename, modeService, firstLine, mode;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        filename = this.uri.path.toString();\n                        modeService = monaco.services.StaticServices.modeService.get();\n                        firstLine = this.document.textEditorModel.getLineContent(1);\n                        return [4 /*yield*/, modeService.getOrCreateModeByFilenameOrFirstLine(filename, firstLine)];\n                    case 1:\n                        mode = _a.sent();\n                        this.setLanguage(mode.getId());\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditor.prototype.setLanguage = function (languageId) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.documents), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var document_1 = _c.value;\n                monaco.editor.setModelLanguage(document_1.textEditorModel, languageId);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return MonacoEditor;\n}());\nexports.MonacoEditor = MonacoEditor;\n(function (MonacoEditor) {\n    function getAll(manager) {\n        return manager.all.map(function (e) { return get(e); }).filter(function (e) { return !!e; });\n    }\n    MonacoEditor.getAll = getAll;\n    function getCurrent(manager) {\n        return get(manager.currentEditor);\n    }\n    MonacoEditor.getCurrent = getCurrent;\n    function getActive(manager) {\n        return get(manager.activeEditor);\n    }\n    MonacoEditor.getActive = getActive;\n    function get(editorWidget) {\n        if (editorWidget && editorWidget.editor instanceof MonacoEditor) {\n            return editorWidget.editor;\n        }\n        return undefined;\n    }\n    MonacoEditor.get = get;\n    function findByDocument(manager, document) {\n        return getAll(manager).filter(function (editor) { return editor.documents.has(document); });\n    }\n    MonacoEditor.findByDocument = findByDocument;\n    function getWidgetFor(manager, control) {\n        if (!control) {\n            return undefined;\n        }\n        return manager.all.find(function (widget) {\n            var editor = get(widget);\n            return !!editor && editor.getControl() === control;\n        });\n    }\n    MonacoEditor.getWidgetFor = getWidgetFor;\n})(MonacoEditor = exports.MonacoEditor || (exports.MonacoEditor = {}));\nexports.MonacoEditor = MonacoEditor;\n//# sourceMappingURL=monaco-editor.js.map","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter } from 'monaco-languageclient';\nimport URI from '@theia/core/lib/common/uri';\nimport { ResourceProvider, ReferenceCollection, Event } from '@theia/core';\nimport { EditorPreferences, EditorPreferenceChange } from '@theia/editor/lib/browser';\nimport { MonacoEditorModel } from './monaco-editor-model';\n\n@injectable()\nexport class MonacoTextModelService implements monaco.editor.ITextModelService {\n\n    protected readonly _models = new ReferenceCollection<string, MonacoEditorModel>(\n        uri => this.loadModel(new URI(uri))\n    );\n\n    @inject(ResourceProvider)\n    protected readonly resourceProvider: ResourceProvider;\n\n    @inject(EditorPreferences)\n    protected readonly editorPreferences: EditorPreferences;\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    get models(): MonacoEditorModel[] {\n        return this._models.values();\n    }\n\n    get(uri: string): MonacoEditorModel | undefined {\n        return this._models.get(uri);\n    }\n\n    get onDidCreate(): Event<MonacoEditorModel> {\n        return this._models.onDidCreate;\n    }\n\n    createModelReference(raw: monaco.Uri | URI): monaco.Promise<monaco.editor.IReference<MonacoEditorModel>> {\n        return monaco.Promise.wrap(this._models.acquire(raw.toString()));\n    }\n\n    protected async loadModel(uri: URI): Promise<MonacoEditorModel> {\n        await this.editorPreferences.ready;\n        const resource = await this.resourceProvider(uri);\n        const model = await (new MonacoEditorModel(resource, this.m2p, this.p2m).load());\n        model.autoSave = this.editorPreferences['editor.autoSave'];\n        model.autoSaveDelay = this.editorPreferences['editor.autoSaveDelay'];\n        model.textEditorModel.updateOptions(this.getModelOptions());\n        const disposable = this.editorPreferences.onPreferenceChanged(change => this.updateModel(model, change));\n        model.onDispose(() => disposable.dispose());\n        return model;\n    }\n\n    protected readonly modelOptions: {\n        [name: string]: (keyof monaco.editor.ITextModelUpdateOptions | undefined)\n    } = {\n            'editor.tabSize': 'tabSize',\n            'editor.insertSpaces': 'insertSpaces'\n        };\n\n    protected updateModel(model: MonacoEditorModel, change: EditorPreferenceChange): void {\n        if (change.preferenceName === 'editor.autoSave') {\n            model.autoSave = this.editorPreferences['editor.autoSave'];\n        }\n        if (change.preferenceName === 'editor.autoSaveDelay') {\n            model.autoSaveDelay = this.editorPreferences['editor.autoSaveDelay'];\n        }\n        const modelOption = this.modelOptions[change.preferenceName];\n        if (modelOption) {\n            const options: monaco.editor.ITextModelUpdateOptions = {};\n            // tslint:disable-next-line:no-any\n            options[modelOption] = change.newValue as any;\n            model.textEditorModel.updateOptions(options);\n        }\n    }\n\n    protected getModelOptions(): monaco.editor.ITextModelUpdateOptions {\n        return {\n            tabSize: this.editorPreferences['editor.tabSize'],\n            insertSpaces: this.editorPreferences['editor.insertSpaces']\n        };\n    }\n\n    registerTextModelContentProvider(scheme: string, provider: monaco.editor.ITextModelContentProvider): monaco.IDisposable {\n        return {\n            dispose(): void {\n                // no-op\n            }\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TextmateRegistry } from './textmate-registry';\n\n/**\n * Callback for extensions to contribute language grammar definitions\n */\nexport const LanguageGrammarDefinitionContribution = Symbol('LanguageGrammarDefinitionContribution');\nexport interface LanguageGrammarDefinitionContribution {\n    registerTextmateLanguage(registry: TextmateRegistry): void;\n}\nexport function getEncodedLanguageId(languageId: string): number {\n    return monaco.languages.getEncodedLanguageId(languageId);\n}\n"],"sourceRoot":""}