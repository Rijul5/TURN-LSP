{"version":3,"sources":["webpack:///../node_modules/@theia/outline-view/src/browser/outline-view-contribution.ts","webpack:///../node_modules/@theia/outline-view/src/browser/outline-view-frontend-module.ts","webpack:///../node_modules/@theia/outline-view/src/browser/styles/index.css?79fa","webpack:///../node_modules/@theia/outline-view/src/browser/styles/index.css"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAAuC;AACvC,2KAA2F;AAI9E,iCAAyB,GAAG,cAAc,CAAC;AAGxD;IAA6C,2CAA2C;IAEpF;eACI,kBAAM;YACF,QAAQ,EAAE,iCAAyB;YACnC,UAAU,EAAE,SAAS;YACrB,oBAAoB,EAAE;gBAClB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,GAAG;aACZ;YACD,eAAe,EAAE,oBAAoB;YACrC,gBAAgB,EAAE,iBAAiB;SACtC,CAAC;IACN,CAAC;IAEK,kDAAgB,GAAtB,UAAuB,GAAwB;;;;4BAC3C,qBAAM,IAAI,CAAC,QAAQ,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACzB;IAjBQ,uBAAuB;QADnC,sBAAU,EAAE;;OACA,uBAAuB,CAkBnC;IAAD,8BAAC;CAAA,CAlB4C,4CAAwB,GAkBpE;AAlBY,0DAAuB;;;;;;;;;;;;;;ACxBpC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;AAElF,qGAAwD;AACxD,0JAA4D;AAC5D,yKAAsE;AACtE,sJAAuE;AACvE,uHAOiC;AACjC,uJAAoF;AACpF,kIAA4C;AAE5C,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,IAAI,CAAC,8CAAwB,CAAC,CAAC,SAAS,CAAC,aAAG;QACxC,qBAAM,8BAAuB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAtC,CAAsC;IAA5C,CAA4C,CAC/C,CAAC;IAEF,IAAI,CAAC,yCAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,8BAAa,CAAC,CAAC,cAAc,CAAC,iBAAO,IAAI,cAAO,CAAC,SAAS,CAAC,GAAG,CAAC,yCAAkB,CAAC,EAAzC,CAAyC,CAAC,CAAC;IAEzF,8BAAoB,CAAC,IAAI,EAAE,mDAAuB,CAAC,CAAC;IACpD,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,mDAAuB,CAAC,CAAC;AAC7E,CAAC,CAAC,CAAC;AAEH,iCAAiC,MAA4B;IACzD,IAAM,KAAK,GAAG,6BAAmB,CAAC,MAAM,CAAC,CAAC;IAE1C,KAAK,CAAC,MAAM,CAAC,mBAAS,CAAC,CAAC,eAAe,cAAM,0BAAgB,IAAE,MAAM,EAAE,IAAI,IAAG,CAAC;IAE/E,KAAK,CAAC,MAAM,CAAC,oBAAU,CAAC,CAAC;IACzB,KAAK,CAAC,IAAI,CAAC,uCAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;IAEvC,OAAO,KAAK,CAAC,GAAG,CAAC,uCAAiB,CAAC,CAAC;AACxC,CAAC;;;;;;;;;;;;ACpDD;;AAEA;AACA,cAAc,mBAAO,CAAC,oJAAkD;AACxE,4CAA4C,QAAS;AACrD;AACA,aAAa,mBAAO,CAAC,2FAA2C,aAAa;AAC7E;AACA;AACA,GAAG,KAAU,EAAE,E;;;;;;;;;;;ACTf,2BAA2B,mBAAO,CAAC,6FAA2C;AAC9E;;;AAGA;AACA,cAAc,QAAS,62BAA62B,4BAA4B;;AAEh6B","file":"34.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OutlineViewWidget } from './outline-view-widget';\nimport { FrontendApplicationContribution, FrontendApplication } from '@theia/core/lib/browser/frontend-application';\n\nexport const OUTLINE_WIDGET_FACTORY_ID = 'outline-view';\n\n@injectable()\nexport class OutlineViewContribution extends AbstractViewContribution<OutlineViewWidget> implements FrontendApplicationContribution {\n\n    constructor() {\n        super({\n            widgetId: OUTLINE_WIDGET_FACTORY_ID,\n            widgetName: 'Outline',\n            defaultWidgetOptions: {\n                area: 'right',\n                rank: 500\n            },\n            toggleCommandId: 'outlineView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+s'\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, interfaces } from 'inversify';\nimport { OutlineViewService } from './outline-view-service';\nimport { OutlineViewContribution } from './outline-view-contribution';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport {\n    FrontendApplicationContribution,\n    createTreeContainer,\n    TreeWidget,\n    bindViewContribution,\n    TreeProps,\n    defaultTreeProps\n} from '@theia/core/lib/browser';\nimport { OutlineViewWidgetFactory, OutlineViewWidget } from './outline-view-widget';\nimport '../../src/browser/styles/index.css';\n\nexport default new ContainerModule(bind => {\n    bind(OutlineViewWidgetFactory).toFactory(ctx =>\n        () => createOutlineViewWidget(ctx.container)\n    );\n\n    bind(OutlineViewService).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => context.container.get(OutlineViewService));\n\n    bindViewContribution(bind, OutlineViewContribution);\n    bind(FrontendApplicationContribution).toService(OutlineViewContribution);\n});\n\nfunction createOutlineViewWidget(parent: interfaces.Container): OutlineViewWidget {\n    const child = createTreeContainer(parent);\n\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, search: true });\n\n    child.unbind(TreeWidget);\n    child.bind(OutlineViewWidget).toSelf();\n\n    return child.get(OutlineViewWidget);\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.outline-view-tab-icon::before {\\n    content: \\\"\\\\F03A\\\"\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}