/**
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package io.typefox.yang.yang.impl;

import io.typefox.yang.yang.AbbrevAttributeStep;
import io.typefox.yang.yang.AbsolutePath;
import io.typefox.yang.yang.AbstractImport;
import io.typefox.yang.yang.AbstractModule;
import io.typefox.yang.yang.Action;
import io.typefox.yang.yang.Anydata;
import io.typefox.yang.yang.Anyxml;
import io.typefox.yang.yang.Argument;
import io.typefox.yang.yang.Augment;
import io.typefox.yang.yang.Base;
import io.typefox.yang.yang.BelongsTo;
import io.typefox.yang.yang.BinaryOperation;
import io.typefox.yang.yang.BinaryOperator;
import io.typefox.yang.yang.Bit;
import io.typefox.yang.yang.Case;
import io.typefox.yang.yang.Choice;
import io.typefox.yang.yang.Config;
import io.typefox.yang.yang.Contact;
import io.typefox.yang.yang.CurrentRef;
import io.typefox.yang.yang.DataSchemaNode;
import io.typefox.yang.yang.Default;
import io.typefox.yang.yang.DescendantSchemaNodeIdentifierReferences;
import io.typefox.yang.yang.Description;
import io.typefox.yang.yang.Deviate;
import io.typefox.yang.yang.Deviation;
import io.typefox.yang.yang.Enumerable;
import io.typefox.yang.yang.ErrorAppTag;
import io.typefox.yang.yang.ErrorMessage;
import io.typefox.yang.yang.Expression;
import io.typefox.yang.yang.Extension;
import io.typefox.yang.yang.Feature;
import io.typefox.yang.yang.FeatureReference;
import io.typefox.yang.yang.FractionDigits;
import io.typefox.yang.yang.Grouping;
import io.typefox.yang.yang.GroupingRef;
import io.typefox.yang.yang.Identity;
import io.typefox.yang.yang.IfFeature;
import io.typefox.yang.yang.Import;
import io.typefox.yang.yang.Include;
import io.typefox.yang.yang.Input;
import io.typefox.yang.yang.Key;
import io.typefox.yang.yang.KeyReference;
import io.typefox.yang.yang.Leaf;
import io.typefox.yang.yang.LeafList;
import io.typefox.yang.yang.Length;
import io.typefox.yang.yang.List;
import io.typefox.yang.yang.Literal;
import io.typefox.yang.yang.Mandatory;
import io.typefox.yang.yang.Max;
import io.typefox.yang.yang.MaxElements;
import io.typefox.yang.yang.Min;
import io.typefox.yang.yang.MinElements;
import io.typefox.yang.yang.Modifier;
import io.typefox.yang.yang.Module;
import io.typefox.yang.yang.Must;
import io.typefox.yang.yang.Namespace;
import io.typefox.yang.yang.Notification;
import io.typefox.yang.yang.Ordered;
import io.typefox.yang.yang.OrderedBy;
import io.typefox.yang.yang.Organization;
import io.typefox.yang.yang.OtherStatement;
import io.typefox.yang.yang.Output;
import io.typefox.yang.yang.ParentRef;
import io.typefox.yang.yang.Path;
import io.typefox.yang.yang.Pattern;
import io.typefox.yang.yang.Position;
import io.typefox.yang.yang.Prefix;
import io.typefox.yang.yang.Presence;
import io.typefox.yang.yang.ProcessingInstruction;
import io.typefox.yang.yang.Range;
import io.typefox.yang.yang.Reference;
import io.typefox.yang.yang.Refinable;
import io.typefox.yang.yang.Refine;
import io.typefox.yang.yang.RelativePath;
import io.typefox.yang.yang.RequireInstance;
import io.typefox.yang.yang.Revision;
import io.typefox.yang.yang.RevisionDate;
import io.typefox.yang.yang.Rpc;
import io.typefox.yang.yang.SchemaNode;
import io.typefox.yang.yang.SchemaNodeIdentifier;
import io.typefox.yang.yang.Statement;
import io.typefox.yang.yang.Status;
import io.typefox.yang.yang.Submodule;
import io.typefox.yang.yang.Type;
import io.typefox.yang.yang.TypeReference;
import io.typefox.yang.yang.Typedef;
import io.typefox.yang.yang.UnaryOperation;
import io.typefox.yang.yang.Unique;
import io.typefox.yang.yang.Units;
import io.typefox.yang.yang.Unknown;
import io.typefox.yang.yang.UnparsedXpath;
import io.typefox.yang.yang.Uses;
import io.typefox.yang.yang.Value;
import io.typefox.yang.yang.When;
import io.typefox.yang.yang.XpathAdditiveOperation;
import io.typefox.yang.yang.XpathAndOperation;
import io.typefox.yang.yang.XpathEqualityOperation;
import io.typefox.yang.yang.XpathExpression;
import io.typefox.yang.yang.XpathFilter;
import io.typefox.yang.yang.XpathFunctionCall;
import io.typefox.yang.yang.XpathLocation;
import io.typefox.yang.yang.XpathMultiplicativeOperation;
import io.typefox.yang.yang.XpathNameTest;
import io.typefox.yang.yang.XpathNodeTest;
import io.typefox.yang.yang.XpathNodeType;
import io.typefox.yang.yang.XpathNumberLiteral;
import io.typefox.yang.yang.XpathOrOperation;
import io.typefox.yang.yang.XpathRelationalOperation;
import io.typefox.yang.yang.XpathStep;
import io.typefox.yang.yang.XpathStringLiteral;
import io.typefox.yang.yang.XpathUnaryOperation;
import io.typefox.yang.yang.XpathUnionOperation;
import io.typefox.yang.yang.XpathVariableReference;
import io.typefox.yang.yang.YangFactory;
import io.typefox.yang.yang.YangPackage;
import io.typefox.yang.yang.YangVersion;
import io.typefox.yang.yang.YinElement;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class YangPackageImpl extends EPackageImpl implements YangPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractModuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataSchemaNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass otherStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumerableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orderedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass refinableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass moduleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass yangVersionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namespaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass prefixEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass revisionDateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass includeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass organizationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contactEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass revisionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass submoduleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass belongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typedefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unitsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defaultEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass containerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mustEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass errorMessageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass errorAppTagEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass presenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass leafEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mandatoryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass leafListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass minElementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass maxElementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orderedByEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass keyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass keyReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass descendantSchemaNodeIdentifierReferencesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uniqueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass choiceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass caseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anydataEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anyxmlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass groupingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass usesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass refineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rpcEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass outputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass augmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass baseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass extensionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass yinElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass featureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ifFeatureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deviationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deviateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass configEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statusEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass descriptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass referenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass whenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fractionDigitsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lengthEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass positionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass requireInstanceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unknownEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaNodeIdentifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass groupingRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathStepEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathNodeTestEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathNameTestEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass binaryOperatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass featureReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unaryOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass binaryOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass literalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass minEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass maxEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unparsedXpathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathOrOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathAndOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathEqualityOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathRelationalOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathAdditiveOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathMultiplicativeOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathUnaryOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathUnionOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathLocationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathFilterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathVariableReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathStringLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathNumberLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathFunctionCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass relativePathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass absolutePathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass currentRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parentRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abbrevAttributeStepEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xpathNodeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass processingInstructionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see io.typefox.yang.yang.YangPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private YangPackageImpl()
  {
    super(eNS_URI, YangFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link YangPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static YangPackage init()
  {
    if (isInited) return (YangPackage)EPackage.Registry.INSTANCE.getEPackage(YangPackage.eNS_URI);

    // Obtain or create and register package
    YangPackageImpl theYangPackage = (YangPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof YangPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new YangPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theYangPackage.createPackageContents();

    // Initialize created meta-data
    theYangPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theYangPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(YangPackage.eNS_URI, theYangPackage);
    return theYangPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractModule()
  {
    return abstractModuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAbstractModule_Name()
  {
    return (EAttribute)abstractModuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStatement_Substatements()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractImport()
  {
    return abstractImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbstractImport_Module()
  {
    return (EReference)abstractImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSchemaNode()
  {
    return schemaNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSchemaNode_Name()
  {
    return (EAttribute)schemaNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDataSchemaNode()
  {
    return dataSchemaNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOtherStatement()
  {
    return otherStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEnumerable()
  {
    return enumerableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEnumerable_Name()
  {
    return (EAttribute)enumerableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrdered()
  {
    return orderedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getOrdered_Ordinal()
  {
    return (EAttribute)orderedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRefinable()
  {
    return refinableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRefinable_Expression()
  {
    return (EReference)refinableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModule()
  {
    return moduleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getYangVersion()
  {
    return yangVersionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getYangVersion_YangVersion()
  {
    return (EAttribute)yangVersionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNamespace()
  {
    return namespaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNamespace_Uri()
  {
    return (EAttribute)namespaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrefix()
  {
    return prefixEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrefix_Prefix()
  {
    return (EAttribute)prefixEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRevisionDate()
  {
    return revisionDateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRevisionDate_Date()
  {
    return (EReference)revisionDateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInclude()
  {
    return includeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrganization()
  {
    return organizationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getOrganization_Organization()
  {
    return (EAttribute)organizationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContact()
  {
    return contactEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContact_Contact()
  {
    return (EAttribute)contactEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRevision()
  {
    return revisionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRevision_Revision()
  {
    return (EAttribute)revisionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSubmodule()
  {
    return submoduleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBelongsTo()
  {
    return belongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBelongsTo_Module()
  {
    return (EReference)belongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypedef()
  {
    return typedefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnits()
  {
    return unitsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUnits_Definition()
  {
    return (EAttribute)unitsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefault()
  {
    return defaultEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDefault_DefaultStringValue()
  {
    return (EAttribute)defaultEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getType()
  {
    return typeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getType_TypeRef()
  {
    return (EReference)typeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeReference()
  {
    return typeReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeReference_Builtin()
  {
    return (EAttribute)typeReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTypeReference_Type()
  {
    return (EReference)typeReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContainer()
  {
    return containerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMust()
  {
    return mustEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMust_Constraint()
  {
    return (EReference)mustEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getErrorMessage()
  {
    return errorMessageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getErrorMessage_Message()
  {
    return (EAttribute)errorMessageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getErrorAppTag()
  {
    return errorAppTagEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getErrorAppTag_Tag()
  {
    return (EAttribute)errorAppTagEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPresence()
  {
    return presenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPresence_Description()
  {
    return (EAttribute)presenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLeaf()
  {
    return leafEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMandatory()
  {
    return mandatoryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMandatory_IsMandatory()
  {
    return (EAttribute)mandatoryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLeafList()
  {
    return leafListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMinElements()
  {
    return minElementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMinElements_MinElements()
  {
    return (EAttribute)minElementsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMaxElements()
  {
    return maxElementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMaxElements_MaxElements()
  {
    return (EAttribute)maxElementsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrderedBy()
  {
    return orderedByEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getOrderedBy_OrderedBy()
  {
    return (EAttribute)orderedByEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getList()
  {
    return listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getKey()
  {
    return keyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getKey_References()
  {
    return (EReference)keyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getKeyReference()
  {
    return keyReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getKeyReference_Node()
  {
    return (EReference)keyReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDescendantSchemaNodeIdentifierReferences()
  {
    return descendantSchemaNodeIdentifierReferencesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDescendantSchemaNodeIdentifierReferences_References()
  {
    return (EReference)descendantSchemaNodeIdentifierReferencesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnique()
  {
    return uniqueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getChoice()
  {
    return choiceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCase()
  {
    return caseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnydata()
  {
    return anydataEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnyxml()
  {
    return anyxmlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGrouping()
  {
    return groupingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUses()
  {
    return usesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getUses_Grouping()
  {
    return (EReference)usesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRefine()
  {
    return refineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRefine_Node()
  {
    return (EReference)refineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRpc()
  {
    return rpcEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInput()
  {
    return inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOutput()
  {
    return outputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAction()
  {
    return actionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNotification()
  {
    return notificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAugment()
  {
    return augmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAugment_Path()
  {
    return (EReference)augmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIdentity()
  {
    return identityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBase()
  {
    return baseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBase_Reference()
  {
    return (EReference)baseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExtension()
  {
    return extensionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getArgument()
  {
    return argumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getArgument_Name()
  {
    return (EAttribute)argumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getYinElement()
  {
    return yinElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getYinElement_IsYinElement()
  {
    return (EAttribute)yinElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFeature()
  {
    return featureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIfFeature()
  {
    return ifFeatureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIfFeature_Condition()
  {
    return (EReference)ifFeatureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDeviation()
  {
    return deviationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDeviation_Reference()
  {
    return (EReference)deviationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDeviate()
  {
    return deviateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDeviate_Argument()
  {
    return (EAttribute)deviateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConfig()
  {
    return configEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfig_IsConfig()
  {
    return (EAttribute)configEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatus()
  {
    return statusEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStatus_Argument()
  {
    return (EAttribute)statusEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDescription()
  {
    return descriptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDescription_Description()
  {
    return (EAttribute)descriptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getReference()
  {
    return referenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getReference_Reference()
  {
    return (EAttribute)referenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWhen()
  {
    return whenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getWhen_Condition()
  {
    return (EReference)whenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRange()
  {
    return rangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFractionDigits()
  {
    return fractionDigitsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFractionDigits_Range()
  {
    return (EAttribute)fractionDigitsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLength()
  {
    return lengthEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPattern()
  {
    return patternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPattern_Regexp()
  {
    return (EAttribute)patternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModifier()
  {
    return modifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModifier_Modifier()
  {
    return (EAttribute)modifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEnum()
  {
    return enumEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getValue()
  {
    return valueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBit()
  {
    return bitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPosition()
  {
    return positionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPath()
  {
    return pathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPath_Reference()
  {
    return (EReference)pathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRequireInstance()
  {
    return requireInstanceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRequireInstance_IsRequireInstance()
  {
    return (EAttribute)requireInstanceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnknown()
  {
    return unknownEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getUnknown_Extension()
  {
    return (EReference)unknownEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUnknown_Name()
  {
    return (EAttribute)unknownEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSchemaNodeIdentifier()
  {
    return schemaNodeIdentifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSchemaNodeIdentifier_Target()
  {
    return (EReference)schemaNodeIdentifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSchemaNodeIdentifier_SchemaNode()
  {
    return (EReference)schemaNodeIdentifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSchemaNodeIdentifier_IsAbsolute()
  {
    return (EAttribute)schemaNodeIdentifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGroupingRef()
  {
    return groupingRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGroupingRef_Node()
  {
    return (EReference)groupingRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathExpression()
  {
    return xpathExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathStep()
  {
    return xpathStepEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathStep_Axis()
  {
    return (EAttribute)xpathStepEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathStep_Node()
  {
    return (EReference)xpathStepEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathNodeTest()
  {
    return xpathNodeTestEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathNameTest()
  {
    return xpathNameTestEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathNameTest_Prefix()
  {
    return (EAttribute)xpathNameTestEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathNameTest_Ref()
  {
    return (EReference)xpathNameTestEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBinaryOperator()
  {
    return binaryOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBinaryOperator_Left()
  {
    return (EReference)binaryOperatorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBinaryOperator_Operator()
  {
    return (EAttribute)binaryOperatorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBinaryOperator_Right()
  {
    return (EReference)binaryOperatorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFeatureReference()
  {
    return featureReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFeatureReference_Feature()
  {
    return (EReference)featureReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnaryOperation()
  {
    return unaryOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUnaryOperation_Operator()
  {
    return (EAttribute)unaryOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getUnaryOperation_Target()
  {
    return (EReference)unaryOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBinaryOperation()
  {
    return binaryOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBinaryOperation_Left()
  {
    return (EReference)binaryOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBinaryOperation_Operator()
  {
    return (EAttribute)binaryOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBinaryOperation_Right()
  {
    return (EReference)binaryOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLiteral()
  {
    return literalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLiteral_Value()
  {
    return (EAttribute)literalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMin()
  {
    return minEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMax()
  {
    return maxEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnparsedXpath()
  {
    return unparsedXpathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUnparsedXpath_Text()
  {
    return (EAttribute)unparsedXpathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathOrOperation()
  {
    return xpathOrOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathOrOperation_Left()
  {
    return (EReference)xpathOrOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathOrOperation_Operator()
  {
    return (EAttribute)xpathOrOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathOrOperation_Right()
  {
    return (EReference)xpathOrOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathAndOperation()
  {
    return xpathAndOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathAndOperation_Left()
  {
    return (EReference)xpathAndOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathAndOperation_Operator()
  {
    return (EAttribute)xpathAndOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathAndOperation_Right()
  {
    return (EReference)xpathAndOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathEqualityOperation()
  {
    return xpathEqualityOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathEqualityOperation_Left()
  {
    return (EReference)xpathEqualityOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathEqualityOperation_Operator()
  {
    return (EAttribute)xpathEqualityOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathEqualityOperation_Right()
  {
    return (EReference)xpathEqualityOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathRelationalOperation()
  {
    return xpathRelationalOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathRelationalOperation_Left()
  {
    return (EReference)xpathRelationalOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathRelationalOperation_Operator()
  {
    return (EAttribute)xpathRelationalOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathRelationalOperation_Right()
  {
    return (EReference)xpathRelationalOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathAdditiveOperation()
  {
    return xpathAdditiveOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathAdditiveOperation_Left()
  {
    return (EReference)xpathAdditiveOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathAdditiveOperation_Operator()
  {
    return (EAttribute)xpathAdditiveOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathAdditiveOperation_Right()
  {
    return (EReference)xpathAdditiveOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathMultiplicativeOperation()
  {
    return xpathMultiplicativeOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathMultiplicativeOperation_Left()
  {
    return (EReference)xpathMultiplicativeOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathMultiplicativeOperation_Operator()
  {
    return (EAttribute)xpathMultiplicativeOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathMultiplicativeOperation_Right()
  {
    return (EReference)xpathMultiplicativeOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathUnaryOperation()
  {
    return xpathUnaryOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathUnaryOperation_Operator()
  {
    return (EAttribute)xpathUnaryOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathUnaryOperation_Target()
  {
    return (EReference)xpathUnaryOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathUnionOperation()
  {
    return xpathUnionOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathUnionOperation_Left()
  {
    return (EReference)xpathUnionOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathUnionOperation_Operator()
  {
    return (EAttribute)xpathUnionOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathUnionOperation_Right()
  {
    return (EReference)xpathUnionOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathLocation()
  {
    return xpathLocationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathLocation_Target()
  {
    return (EReference)xpathLocationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathLocation_IsDescendants()
  {
    return (EAttribute)xpathLocationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathLocation_Step()
  {
    return (EReference)xpathLocationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathFilter()
  {
    return xpathFilterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathFilter_Target()
  {
    return (EReference)xpathFilterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathFilter_Predicate()
  {
    return (EReference)xpathFilterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathVariableReference()
  {
    return xpathVariableReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathVariableReference_Name()
  {
    return (EAttribute)xpathVariableReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathStringLiteral()
  {
    return xpathStringLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathStringLiteral_Value()
  {
    return (EAttribute)xpathStringLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathNumberLiteral()
  {
    return xpathNumberLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathNumberLiteral_Value()
  {
    return (EAttribute)xpathNumberLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathFunctionCall()
  {
    return xpathFunctionCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathFunctionCall_Name()
  {
    return (EAttribute)xpathFunctionCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getXpathFunctionCall_Args()
  {
    return (EReference)xpathFunctionCallEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRelativePath()
  {
    return relativePathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRelativePath_Step()
  {
    return (EReference)relativePathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbsolutePath()
  {
    return absolutePathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAbsolutePath_IsDescendants()
  {
    return (EAttribute)absolutePathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbsolutePath_Step()
  {
    return (EReference)absolutePathEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCurrentRef()
  {
    return currentRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCurrentRef_Ref()
  {
    return (EReference)currentRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getParentRef()
  {
    return parentRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getParentRef_Ref()
  {
    return (EReference)parentRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbbrevAttributeStep()
  {
    return abbrevAttributeStepEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAbbrevAttributeStep_AttributeName()
  {
    return (EAttribute)abbrevAttributeStepEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXpathNodeType()
  {
    return xpathNodeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getXpathNodeType_Name()
  {
    return (EAttribute)xpathNodeTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getProcessingInstruction()
  {
    return processingInstructionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getProcessingInstruction_Instruction()
  {
    return (EAttribute)processingInstructionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YangFactory getYangFactory()
  {
    return (YangFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    abstractModuleEClass = createEClass(ABSTRACT_MODULE);
    createEAttribute(abstractModuleEClass, ABSTRACT_MODULE__NAME);

    statementEClass = createEClass(STATEMENT);
    createEReference(statementEClass, STATEMENT__SUBSTATEMENTS);

    abstractImportEClass = createEClass(ABSTRACT_IMPORT);
    createEReference(abstractImportEClass, ABSTRACT_IMPORT__MODULE);

    schemaNodeEClass = createEClass(SCHEMA_NODE);
    createEAttribute(schemaNodeEClass, SCHEMA_NODE__NAME);

    dataSchemaNodeEClass = createEClass(DATA_SCHEMA_NODE);

    otherStatementEClass = createEClass(OTHER_STATEMENT);

    enumerableEClass = createEClass(ENUMERABLE);
    createEAttribute(enumerableEClass, ENUMERABLE__NAME);

    orderedEClass = createEClass(ORDERED);
    createEAttribute(orderedEClass, ORDERED__ORDINAL);

    refinableEClass = createEClass(REFINABLE);
    createEReference(refinableEClass, REFINABLE__EXPRESSION);

    moduleEClass = createEClass(MODULE);

    yangVersionEClass = createEClass(YANG_VERSION);
    createEAttribute(yangVersionEClass, YANG_VERSION__YANG_VERSION);

    namespaceEClass = createEClass(NAMESPACE);
    createEAttribute(namespaceEClass, NAMESPACE__URI);

    prefixEClass = createEClass(PREFIX);
    createEAttribute(prefixEClass, PREFIX__PREFIX);

    importEClass = createEClass(IMPORT);

    revisionDateEClass = createEClass(REVISION_DATE);
    createEReference(revisionDateEClass, REVISION_DATE__DATE);

    includeEClass = createEClass(INCLUDE);

    organizationEClass = createEClass(ORGANIZATION);
    createEAttribute(organizationEClass, ORGANIZATION__ORGANIZATION);

    contactEClass = createEClass(CONTACT);
    createEAttribute(contactEClass, CONTACT__CONTACT);

    revisionEClass = createEClass(REVISION);
    createEAttribute(revisionEClass, REVISION__REVISION);

    submoduleEClass = createEClass(SUBMODULE);

    belongsToEClass = createEClass(BELONGS_TO);
    createEReference(belongsToEClass, BELONGS_TO__MODULE);

    typedefEClass = createEClass(TYPEDEF);

    unitsEClass = createEClass(UNITS);
    createEAttribute(unitsEClass, UNITS__DEFINITION);

    defaultEClass = createEClass(DEFAULT);
    createEAttribute(defaultEClass, DEFAULT__DEFAULT_STRING_VALUE);

    typeEClass = createEClass(TYPE);
    createEReference(typeEClass, TYPE__TYPE_REF);

    typeReferenceEClass = createEClass(TYPE_REFERENCE);
    createEAttribute(typeReferenceEClass, TYPE_REFERENCE__BUILTIN);
    createEReference(typeReferenceEClass, TYPE_REFERENCE__TYPE);

    containerEClass = createEClass(CONTAINER);

    mustEClass = createEClass(MUST);
    createEReference(mustEClass, MUST__CONSTRAINT);

    errorMessageEClass = createEClass(ERROR_MESSAGE);
    createEAttribute(errorMessageEClass, ERROR_MESSAGE__MESSAGE);

    errorAppTagEClass = createEClass(ERROR_APP_TAG);
    createEAttribute(errorAppTagEClass, ERROR_APP_TAG__TAG);

    presenceEClass = createEClass(PRESENCE);
    createEAttribute(presenceEClass, PRESENCE__DESCRIPTION);

    leafEClass = createEClass(LEAF);

    mandatoryEClass = createEClass(MANDATORY);
    createEAttribute(mandatoryEClass, MANDATORY__IS_MANDATORY);

    leafListEClass = createEClass(LEAF_LIST);

    minElementsEClass = createEClass(MIN_ELEMENTS);
    createEAttribute(minElementsEClass, MIN_ELEMENTS__MIN_ELEMENTS);

    maxElementsEClass = createEClass(MAX_ELEMENTS);
    createEAttribute(maxElementsEClass, MAX_ELEMENTS__MAX_ELEMENTS);

    orderedByEClass = createEClass(ORDERED_BY);
    createEAttribute(orderedByEClass, ORDERED_BY__ORDERED_BY);

    listEClass = createEClass(LIST);

    keyEClass = createEClass(KEY);
    createEReference(keyEClass, KEY__REFERENCES);

    keyReferenceEClass = createEClass(KEY_REFERENCE);
    createEReference(keyReferenceEClass, KEY_REFERENCE__NODE);

    descendantSchemaNodeIdentifierReferencesEClass = createEClass(DESCENDANT_SCHEMA_NODE_IDENTIFIER_REFERENCES);
    createEReference(descendantSchemaNodeIdentifierReferencesEClass, DESCENDANT_SCHEMA_NODE_IDENTIFIER_REFERENCES__REFERENCES);

    uniqueEClass = createEClass(UNIQUE);

    choiceEClass = createEClass(CHOICE);

    caseEClass = createEClass(CASE);

    anydataEClass = createEClass(ANYDATA);

    anyxmlEClass = createEClass(ANYXML);

    groupingEClass = createEClass(GROUPING);

    usesEClass = createEClass(USES);
    createEReference(usesEClass, USES__GROUPING);

    refineEClass = createEClass(REFINE);
    createEReference(refineEClass, REFINE__NODE);

    rpcEClass = createEClass(RPC);

    inputEClass = createEClass(INPUT);

    outputEClass = createEClass(OUTPUT);

    actionEClass = createEClass(ACTION);

    notificationEClass = createEClass(NOTIFICATION);

    augmentEClass = createEClass(AUGMENT);
    createEReference(augmentEClass, AUGMENT__PATH);

    identityEClass = createEClass(IDENTITY);

    baseEClass = createEClass(BASE);
    createEReference(baseEClass, BASE__REFERENCE);

    extensionEClass = createEClass(EXTENSION);

    argumentEClass = createEClass(ARGUMENT);
    createEAttribute(argumentEClass, ARGUMENT__NAME);

    yinElementEClass = createEClass(YIN_ELEMENT);
    createEAttribute(yinElementEClass, YIN_ELEMENT__IS_YIN_ELEMENT);

    featureEClass = createEClass(FEATURE);

    ifFeatureEClass = createEClass(IF_FEATURE);
    createEReference(ifFeatureEClass, IF_FEATURE__CONDITION);

    expressionEClass = createEClass(EXPRESSION);

    deviationEClass = createEClass(DEVIATION);
    createEReference(deviationEClass, DEVIATION__REFERENCE);

    deviateEClass = createEClass(DEVIATE);
    createEAttribute(deviateEClass, DEVIATE__ARGUMENT);

    configEClass = createEClass(CONFIG);
    createEAttribute(configEClass, CONFIG__IS_CONFIG);

    statusEClass = createEClass(STATUS);
    createEAttribute(statusEClass, STATUS__ARGUMENT);

    descriptionEClass = createEClass(DESCRIPTION);
    createEAttribute(descriptionEClass, DESCRIPTION__DESCRIPTION);

    referenceEClass = createEClass(REFERENCE);
    createEAttribute(referenceEClass, REFERENCE__REFERENCE);

    whenEClass = createEClass(WHEN);
    createEReference(whenEClass, WHEN__CONDITION);

    rangeEClass = createEClass(RANGE);

    fractionDigitsEClass = createEClass(FRACTION_DIGITS);
    createEAttribute(fractionDigitsEClass, FRACTION_DIGITS__RANGE);

    lengthEClass = createEClass(LENGTH);

    patternEClass = createEClass(PATTERN);
    createEAttribute(patternEClass, PATTERN__REGEXP);

    modifierEClass = createEClass(MODIFIER);
    createEAttribute(modifierEClass, MODIFIER__MODIFIER);

    enumEClass = createEClass(ENUM);

    valueEClass = createEClass(VALUE);

    bitEClass = createEClass(BIT);

    positionEClass = createEClass(POSITION);

    pathEClass = createEClass(PATH);
    createEReference(pathEClass, PATH__REFERENCE);

    requireInstanceEClass = createEClass(REQUIRE_INSTANCE);
    createEAttribute(requireInstanceEClass, REQUIRE_INSTANCE__IS_REQUIRE_INSTANCE);

    unknownEClass = createEClass(UNKNOWN);
    createEReference(unknownEClass, UNKNOWN__EXTENSION);
    createEAttribute(unknownEClass, UNKNOWN__NAME);

    schemaNodeIdentifierEClass = createEClass(SCHEMA_NODE_IDENTIFIER);
    createEReference(schemaNodeIdentifierEClass, SCHEMA_NODE_IDENTIFIER__TARGET);
    createEReference(schemaNodeIdentifierEClass, SCHEMA_NODE_IDENTIFIER__SCHEMA_NODE);
    createEAttribute(schemaNodeIdentifierEClass, SCHEMA_NODE_IDENTIFIER__IS_ABSOLUTE);

    groupingRefEClass = createEClass(GROUPING_REF);
    createEReference(groupingRefEClass, GROUPING_REF__NODE);

    xpathExpressionEClass = createEClass(XPATH_EXPRESSION);

    xpathStepEClass = createEClass(XPATH_STEP);
    createEAttribute(xpathStepEClass, XPATH_STEP__AXIS);
    createEReference(xpathStepEClass, XPATH_STEP__NODE);

    xpathNodeTestEClass = createEClass(XPATH_NODE_TEST);

    xpathNameTestEClass = createEClass(XPATH_NAME_TEST);
    createEAttribute(xpathNameTestEClass, XPATH_NAME_TEST__PREFIX);
    createEReference(xpathNameTestEClass, XPATH_NAME_TEST__REF);

    binaryOperatorEClass = createEClass(BINARY_OPERATOR);
    createEReference(binaryOperatorEClass, BINARY_OPERATOR__LEFT);
    createEAttribute(binaryOperatorEClass, BINARY_OPERATOR__OPERATOR);
    createEReference(binaryOperatorEClass, BINARY_OPERATOR__RIGHT);

    featureReferenceEClass = createEClass(FEATURE_REFERENCE);
    createEReference(featureReferenceEClass, FEATURE_REFERENCE__FEATURE);

    unaryOperationEClass = createEClass(UNARY_OPERATION);
    createEAttribute(unaryOperationEClass, UNARY_OPERATION__OPERATOR);
    createEReference(unaryOperationEClass, UNARY_OPERATION__TARGET);

    binaryOperationEClass = createEClass(BINARY_OPERATION);
    createEReference(binaryOperationEClass, BINARY_OPERATION__LEFT);
    createEAttribute(binaryOperationEClass, BINARY_OPERATION__OPERATOR);
    createEReference(binaryOperationEClass, BINARY_OPERATION__RIGHT);

    literalEClass = createEClass(LITERAL);
    createEAttribute(literalEClass, LITERAL__VALUE);

    minEClass = createEClass(MIN);

    maxEClass = createEClass(MAX);

    unparsedXpathEClass = createEClass(UNPARSED_XPATH);
    createEAttribute(unparsedXpathEClass, UNPARSED_XPATH__TEXT);

    xpathOrOperationEClass = createEClass(XPATH_OR_OPERATION);
    createEReference(xpathOrOperationEClass, XPATH_OR_OPERATION__LEFT);
    createEAttribute(xpathOrOperationEClass, XPATH_OR_OPERATION__OPERATOR);
    createEReference(xpathOrOperationEClass, XPATH_OR_OPERATION__RIGHT);

    xpathAndOperationEClass = createEClass(XPATH_AND_OPERATION);
    createEReference(xpathAndOperationEClass, XPATH_AND_OPERATION__LEFT);
    createEAttribute(xpathAndOperationEClass, XPATH_AND_OPERATION__OPERATOR);
    createEReference(xpathAndOperationEClass, XPATH_AND_OPERATION__RIGHT);

    xpathEqualityOperationEClass = createEClass(XPATH_EQUALITY_OPERATION);
    createEReference(xpathEqualityOperationEClass, XPATH_EQUALITY_OPERATION__LEFT);
    createEAttribute(xpathEqualityOperationEClass, XPATH_EQUALITY_OPERATION__OPERATOR);
    createEReference(xpathEqualityOperationEClass, XPATH_EQUALITY_OPERATION__RIGHT);

    xpathRelationalOperationEClass = createEClass(XPATH_RELATIONAL_OPERATION);
    createEReference(xpathRelationalOperationEClass, XPATH_RELATIONAL_OPERATION__LEFT);
    createEAttribute(xpathRelationalOperationEClass, XPATH_RELATIONAL_OPERATION__OPERATOR);
    createEReference(xpathRelationalOperationEClass, XPATH_RELATIONAL_OPERATION__RIGHT);

    xpathAdditiveOperationEClass = createEClass(XPATH_ADDITIVE_OPERATION);
    createEReference(xpathAdditiveOperationEClass, XPATH_ADDITIVE_OPERATION__LEFT);
    createEAttribute(xpathAdditiveOperationEClass, XPATH_ADDITIVE_OPERATION__OPERATOR);
    createEReference(xpathAdditiveOperationEClass, XPATH_ADDITIVE_OPERATION__RIGHT);

    xpathMultiplicativeOperationEClass = createEClass(XPATH_MULTIPLICATIVE_OPERATION);
    createEReference(xpathMultiplicativeOperationEClass, XPATH_MULTIPLICATIVE_OPERATION__LEFT);
    createEAttribute(xpathMultiplicativeOperationEClass, XPATH_MULTIPLICATIVE_OPERATION__OPERATOR);
    createEReference(xpathMultiplicativeOperationEClass, XPATH_MULTIPLICATIVE_OPERATION__RIGHT);

    xpathUnaryOperationEClass = createEClass(XPATH_UNARY_OPERATION);
    createEAttribute(xpathUnaryOperationEClass, XPATH_UNARY_OPERATION__OPERATOR);
    createEReference(xpathUnaryOperationEClass, XPATH_UNARY_OPERATION__TARGET);

    xpathUnionOperationEClass = createEClass(XPATH_UNION_OPERATION);
    createEReference(xpathUnionOperationEClass, XPATH_UNION_OPERATION__LEFT);
    createEAttribute(xpathUnionOperationEClass, XPATH_UNION_OPERATION__OPERATOR);
    createEReference(xpathUnionOperationEClass, XPATH_UNION_OPERATION__RIGHT);

    xpathLocationEClass = createEClass(XPATH_LOCATION);
    createEReference(xpathLocationEClass, XPATH_LOCATION__TARGET);
    createEAttribute(xpathLocationEClass, XPATH_LOCATION__IS_DESCENDANTS);
    createEReference(xpathLocationEClass, XPATH_LOCATION__STEP);

    xpathFilterEClass = createEClass(XPATH_FILTER);
    createEReference(xpathFilterEClass, XPATH_FILTER__TARGET);
    createEReference(xpathFilterEClass, XPATH_FILTER__PREDICATE);

    xpathVariableReferenceEClass = createEClass(XPATH_VARIABLE_REFERENCE);
    createEAttribute(xpathVariableReferenceEClass, XPATH_VARIABLE_REFERENCE__NAME);

    xpathStringLiteralEClass = createEClass(XPATH_STRING_LITERAL);
    createEAttribute(xpathStringLiteralEClass, XPATH_STRING_LITERAL__VALUE);

    xpathNumberLiteralEClass = createEClass(XPATH_NUMBER_LITERAL);
    createEAttribute(xpathNumberLiteralEClass, XPATH_NUMBER_LITERAL__VALUE);

    xpathFunctionCallEClass = createEClass(XPATH_FUNCTION_CALL);
    createEAttribute(xpathFunctionCallEClass, XPATH_FUNCTION_CALL__NAME);
    createEReference(xpathFunctionCallEClass, XPATH_FUNCTION_CALL__ARGS);

    relativePathEClass = createEClass(RELATIVE_PATH);
    createEReference(relativePathEClass, RELATIVE_PATH__STEP);

    absolutePathEClass = createEClass(ABSOLUTE_PATH);
    createEAttribute(absolutePathEClass, ABSOLUTE_PATH__IS_DESCENDANTS);
    createEReference(absolutePathEClass, ABSOLUTE_PATH__STEP);

    currentRefEClass = createEClass(CURRENT_REF);
    createEReference(currentRefEClass, CURRENT_REF__REF);

    parentRefEClass = createEClass(PARENT_REF);
    createEReference(parentRefEClass, PARENT_REF__REF);

    abbrevAttributeStepEClass = createEClass(ABBREV_ATTRIBUTE_STEP);
    createEAttribute(abbrevAttributeStepEClass, ABBREV_ATTRIBUTE_STEP__ATTRIBUTE_NAME);

    xpathNodeTypeEClass = createEClass(XPATH_NODE_TYPE);
    createEAttribute(xpathNodeTypeEClass, XPATH_NODE_TYPE__NAME);

    processingInstructionEClass = createEClass(PROCESSING_INSTRUCTION);
    createEAttribute(processingInstructionEClass, PROCESSING_INSTRUCTION__INSTRUCTION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    abstractModuleEClass.getESuperTypes().add(this.getOtherStatement());
    abstractImportEClass.getESuperTypes().add(this.getOtherStatement());
    schemaNodeEClass.getESuperTypes().add(this.getStatement());
    dataSchemaNodeEClass.getESuperTypes().add(this.getSchemaNode());
    otherStatementEClass.getESuperTypes().add(this.getStatement());
    enumerableEClass.getESuperTypes().add(this.getOtherStatement());
    orderedEClass.getESuperTypes().add(this.getOtherStatement());
    refinableEClass.getESuperTypes().add(this.getOtherStatement());
    moduleEClass.getESuperTypes().add(this.getAbstractModule());
    yangVersionEClass.getESuperTypes().add(this.getOtherStatement());
    namespaceEClass.getESuperTypes().add(this.getOtherStatement());
    prefixEClass.getESuperTypes().add(this.getOtherStatement());
    importEClass.getESuperTypes().add(this.getAbstractImport());
    revisionDateEClass.getESuperTypes().add(this.getOtherStatement());
    includeEClass.getESuperTypes().add(this.getAbstractImport());
    organizationEClass.getESuperTypes().add(this.getOtherStatement());
    contactEClass.getESuperTypes().add(this.getOtherStatement());
    revisionEClass.getESuperTypes().add(this.getOtherStatement());
    submoduleEClass.getESuperTypes().add(this.getAbstractModule());
    belongsToEClass.getESuperTypes().add(this.getOtherStatement());
    typedefEClass.getESuperTypes().add(this.getSchemaNode());
    unitsEClass.getESuperTypes().add(this.getOtherStatement());
    defaultEClass.getESuperTypes().add(this.getOtherStatement());
    typeEClass.getESuperTypes().add(this.getOtherStatement());
    containerEClass.getESuperTypes().add(this.getDataSchemaNode());
    mustEClass.getESuperTypes().add(this.getOtherStatement());
    errorMessageEClass.getESuperTypes().add(this.getOtherStatement());
    errorAppTagEClass.getESuperTypes().add(this.getOtherStatement());
    presenceEClass.getESuperTypes().add(this.getOtherStatement());
    leafEClass.getESuperTypes().add(this.getDataSchemaNode());
    mandatoryEClass.getESuperTypes().add(this.getOtherStatement());
    leafListEClass.getESuperTypes().add(this.getDataSchemaNode());
    minElementsEClass.getESuperTypes().add(this.getOtherStatement());
    maxElementsEClass.getESuperTypes().add(this.getOtherStatement());
    orderedByEClass.getESuperTypes().add(this.getOtherStatement());
    listEClass.getESuperTypes().add(this.getDataSchemaNode());
    keyEClass.getESuperTypes().add(this.getOtherStatement());
    uniqueEClass.getESuperTypes().add(this.getOtherStatement());
    uniqueEClass.getESuperTypes().add(this.getDescendantSchemaNodeIdentifierReferences());
    choiceEClass.getESuperTypes().add(this.getDataSchemaNode());
    caseEClass.getESuperTypes().add(this.getDataSchemaNode());
    anydataEClass.getESuperTypes().add(this.getDataSchemaNode());
    anyxmlEClass.getESuperTypes().add(this.getDataSchemaNode());
    groupingEClass.getESuperTypes().add(this.getSchemaNode());
    usesEClass.getESuperTypes().add(this.getOtherStatement());
    refineEClass.getESuperTypes().add(this.getOtherStatement());
    rpcEClass.getESuperTypes().add(this.getSchemaNode());
    inputEClass.getESuperTypes().add(this.getSchemaNode());
    outputEClass.getESuperTypes().add(this.getSchemaNode());
    actionEClass.getESuperTypes().add(this.getSchemaNode());
    notificationEClass.getESuperTypes().add(this.getSchemaNode());
    augmentEClass.getESuperTypes().add(this.getOtherStatement());
    identityEClass.getESuperTypes().add(this.getSchemaNode());
    baseEClass.getESuperTypes().add(this.getOtherStatement());
    extensionEClass.getESuperTypes().add(this.getSchemaNode());
    argumentEClass.getESuperTypes().add(this.getOtherStatement());
    yinElementEClass.getESuperTypes().add(this.getOtherStatement());
    featureEClass.getESuperTypes().add(this.getSchemaNode());
    ifFeatureEClass.getESuperTypes().add(this.getOtherStatement());
    deviationEClass.getESuperTypes().add(this.getOtherStatement());
    deviateEClass.getESuperTypes().add(this.getOtherStatement());
    configEClass.getESuperTypes().add(this.getOtherStatement());
    statusEClass.getESuperTypes().add(this.getOtherStatement());
    descriptionEClass.getESuperTypes().add(this.getOtherStatement());
    referenceEClass.getESuperTypes().add(this.getOtherStatement());
    whenEClass.getESuperTypes().add(this.getOtherStatement());
    rangeEClass.getESuperTypes().add(this.getRefinable());
    fractionDigitsEClass.getESuperTypes().add(this.getOtherStatement());
    lengthEClass.getESuperTypes().add(this.getRefinable());
    patternEClass.getESuperTypes().add(this.getOtherStatement());
    modifierEClass.getESuperTypes().add(this.getOtherStatement());
    enumEClass.getESuperTypes().add(this.getEnumerable());
    valueEClass.getESuperTypes().add(this.getOrdered());
    bitEClass.getESuperTypes().add(this.getEnumerable());
    positionEClass.getESuperTypes().add(this.getOrdered());
    pathEClass.getESuperTypes().add(this.getOtherStatement());
    requireInstanceEClass.getESuperTypes().add(this.getOtherStatement());
    unknownEClass.getESuperTypes().add(this.getOtherStatement());
    xpathNameTestEClass.getESuperTypes().add(this.getXpathNodeTest());
    binaryOperatorEClass.getESuperTypes().add(this.getExpression());
    featureReferenceEClass.getESuperTypes().add(this.getExpression());
    unaryOperationEClass.getESuperTypes().add(this.getExpression());
    binaryOperationEClass.getESuperTypes().add(this.getExpression());
    literalEClass.getESuperTypes().add(this.getExpression());
    minEClass.getESuperTypes().add(this.getExpression());
    maxEClass.getESuperTypes().add(this.getExpression());
    unparsedXpathEClass.getESuperTypes().add(this.getXpathExpression());
    xpathOrOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathAndOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathEqualityOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathRelationalOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathAdditiveOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathMultiplicativeOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathUnaryOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathUnionOperationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathLocationEClass.getESuperTypes().add(this.getXpathExpression());
    xpathFilterEClass.getESuperTypes().add(this.getXpathExpression());
    xpathVariableReferenceEClass.getESuperTypes().add(this.getXpathExpression());
    xpathStringLiteralEClass.getESuperTypes().add(this.getXpathExpression());
    xpathNumberLiteralEClass.getESuperTypes().add(this.getXpathExpression());
    xpathFunctionCallEClass.getESuperTypes().add(this.getXpathExpression());
    relativePathEClass.getESuperTypes().add(this.getXpathExpression());
    absolutePathEClass.getESuperTypes().add(this.getXpathExpression());
    currentRefEClass.getESuperTypes().add(this.getXpathStep());
    parentRefEClass.getESuperTypes().add(this.getXpathStep());
    abbrevAttributeStepEClass.getESuperTypes().add(this.getXpathStep());
    xpathNodeTypeEClass.getESuperTypes().add(this.getXpathNodeTest());
    processingInstructionEClass.getESuperTypes().add(this.getXpathNodeTest());

    // Initialize classes and features; add operations and parameters
    initEClass(abstractModuleEClass, AbstractModule.class, "AbstractModule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAbstractModule_Name(), ecorePackage.getEString(), "name", null, 0, 1, AbstractModule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStatement_Substatements(), this.getStatement(), null, "substatements", null, 0, -1, Statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractImportEClass, AbstractImport.class, "AbstractImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAbstractImport_Module(), this.getAbstractModule(), null, "module", null, 0, 1, AbstractImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(schemaNodeEClass, SchemaNode.class, "SchemaNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSchemaNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, SchemaNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataSchemaNodeEClass, DataSchemaNode.class, "DataSchemaNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(otherStatementEClass, OtherStatement.class, "OtherStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(enumerableEClass, Enumerable.class, "Enumerable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumerable_Name(), ecorePackage.getEString(), "name", null, 0, 1, Enumerable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orderedEClass, Ordered.class, "Ordered", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOrdered_Ordinal(), ecorePackage.getEString(), "ordinal", null, 0, 1, Ordered.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(refinableEClass, Refinable.class, "Refinable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRefinable_Expression(), this.getExpression(), null, "expression", null, 0, 1, Refinable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(moduleEClass, Module.class, "Module", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(yangVersionEClass, YangVersion.class, "YangVersion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getYangVersion_YangVersion(), ecorePackage.getEString(), "yangVersion", null, 0, 1, YangVersion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namespaceEClass, Namespace.class, "Namespace", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNamespace_Uri(), ecorePackage.getEString(), "uri", null, 0, 1, Namespace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(prefixEClass, Prefix.class, "Prefix", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPrefix_Prefix(), ecorePackage.getEString(), "prefix", null, 0, 1, Prefix.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(revisionDateEClass, RevisionDate.class, "RevisionDate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRevisionDate_Date(), this.getRevision(), null, "date", null, 0, 1, RevisionDate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(includeEClass, Include.class, "Include", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(organizationEClass, Organization.class, "Organization", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOrganization_Organization(), ecorePackage.getEString(), "organization", null, 0, 1, Organization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contactEClass, Contact.class, "Contact", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContact_Contact(), ecorePackage.getEString(), "contact", null, 0, 1, Contact.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(revisionEClass, Revision.class, "Revision", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRevision_Revision(), ecorePackage.getEString(), "revision", null, 0, 1, Revision.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(submoduleEClass, Submodule.class, "Submodule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(belongsToEClass, BelongsTo.class, "BelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBelongsTo_Module(), this.getModule(), null, "module", null, 0, 1, BelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typedefEClass, Typedef.class, "Typedef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(unitsEClass, Units.class, "Units", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnits_Definition(), ecorePackage.getEString(), "definition", null, 0, 1, Units.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defaultEClass, Default.class, "Default", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDefault_DefaultStringValue(), ecorePackage.getEString(), "defaultStringValue", null, 0, 1, Default.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeEClass, Type.class, "Type", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getType_TypeRef(), this.getTypeReference(), null, "typeRef", null, 0, 1, Type.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeReferenceEClass, TypeReference.class, "TypeReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeReference_Builtin(), ecorePackage.getEString(), "builtin", null, 0, 1, TypeReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTypeReference_Type(), this.getTypedef(), null, "type", null, 0, 1, TypeReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(containerEClass, io.typefox.yang.yang.Container.class, "Container", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mustEClass, Must.class, "Must", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMust_Constraint(), this.getXpathExpression(), null, "constraint", null, 0, 1, Must.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(errorMessageEClass, ErrorMessage.class, "ErrorMessage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getErrorMessage_Message(), ecorePackage.getEString(), "message", null, 0, 1, ErrorMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(errorAppTagEClass, ErrorAppTag.class, "ErrorAppTag", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getErrorAppTag_Tag(), ecorePackage.getEString(), "tag", null, 0, 1, ErrorAppTag.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(presenceEClass, Presence.class, "Presence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPresence_Description(), ecorePackage.getEString(), "description", null, 0, 1, Presence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(leafEClass, Leaf.class, "Leaf", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mandatoryEClass, Mandatory.class, "Mandatory", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMandatory_IsMandatory(), ecorePackage.getEString(), "isMandatory", null, 0, 1, Mandatory.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(leafListEClass, LeafList.class, "LeafList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(minElementsEClass, MinElements.class, "MinElements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMinElements_MinElements(), ecorePackage.getEString(), "minElements", null, 0, 1, MinElements.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(maxElementsEClass, MaxElements.class, "MaxElements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMaxElements_MaxElements(), ecorePackage.getEString(), "maxElements", null, 0, 1, MaxElements.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orderedByEClass, OrderedBy.class, "OrderedBy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOrderedBy_OrderedBy(), ecorePackage.getEString(), "orderedBy", null, 0, 1, OrderedBy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listEClass, List.class, "List", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(keyEClass, Key.class, "Key", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getKey_References(), this.getKeyReference(), null, "references", null, 0, -1, Key.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(keyReferenceEClass, KeyReference.class, "KeyReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getKeyReference_Node(), this.getLeaf(), null, "node", null, 0, 1, KeyReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(descendantSchemaNodeIdentifierReferencesEClass, DescendantSchemaNodeIdentifierReferences.class, "DescendantSchemaNodeIdentifierReferences", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDescendantSchemaNodeIdentifierReferences_References(), this.getSchemaNodeIdentifier(), null, "references", null, 0, -1, DescendantSchemaNodeIdentifierReferences.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(uniqueEClass, Unique.class, "Unique", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(choiceEClass, Choice.class, "Choice", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(caseEClass, Case.class, "Case", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(anydataEClass, Anydata.class, "Anydata", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(anyxmlEClass, Anyxml.class, "Anyxml", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(groupingEClass, Grouping.class, "Grouping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(usesEClass, Uses.class, "Uses", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUses_Grouping(), this.getGroupingRef(), null, "grouping", null, 0, 1, Uses.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(refineEClass, Refine.class, "Refine", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRefine_Node(), this.getSchemaNodeIdentifier(), null, "node", null, 0, 1, Refine.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rpcEClass, Rpc.class, "Rpc", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(inputEClass, Input.class, "Input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(outputEClass, Output.class, "Output", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(actionEClass, Action.class, "Action", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(notificationEClass, Notification.class, "Notification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(augmentEClass, Augment.class, "Augment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAugment_Path(), this.getSchemaNodeIdentifier(), null, "path", null, 0, 1, Augment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(identityEClass, Identity.class, "Identity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(baseEClass, Base.class, "Base", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBase_Reference(), this.getIdentity(), null, "reference", null, 0, 1, Base.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(extensionEClass, Extension.class, "Extension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(argumentEClass, Argument.class, "Argument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArgument_Name(), ecorePackage.getEString(), "name", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(yinElementEClass, YinElement.class, "YinElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getYinElement_IsYinElement(), ecorePackage.getEString(), "isYinElement", null, 0, 1, YinElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(featureEClass, Feature.class, "Feature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ifFeatureEClass, IfFeature.class, "IfFeature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIfFeature_Condition(), this.getExpression(), null, "condition", null, 0, 1, IfFeature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(deviationEClass, Deviation.class, "Deviation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDeviation_Reference(), this.getSchemaNodeIdentifier(), null, "reference", null, 0, 1, Deviation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deviateEClass, Deviate.class, "Deviate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDeviate_Argument(), ecorePackage.getEString(), "argument", null, 0, 1, Deviate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(configEClass, Config.class, "Config", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConfig_IsConfig(), ecorePackage.getEString(), "isConfig", null, 0, 1, Config.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statusEClass, Status.class, "Status", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStatus_Argument(), ecorePackage.getEString(), "argument", null, 0, 1, Status.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(descriptionEClass, Description.class, "Description", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDescription_Description(), ecorePackage.getEString(), "description", null, 0, 1, Description.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(referenceEClass, Reference.class, "Reference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getReference_Reference(), ecorePackage.getEString(), "reference", null, 0, 1, Reference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(whenEClass, When.class, "When", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWhen_Condition(), this.getXpathExpression(), null, "condition", null, 0, 1, When.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rangeEClass, Range.class, "Range", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fractionDigitsEClass, FractionDigits.class, "FractionDigits", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFractionDigits_Range(), ecorePackage.getEString(), "range", null, 0, 1, FractionDigits.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lengthEClass, Length.class, "Length", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(patternEClass, Pattern.class, "Pattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPattern_Regexp(), ecorePackage.getEString(), "regexp", null, 0, 1, Pattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modifierEClass, Modifier.class, "Modifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModifier_Modifier(), ecorePackage.getEString(), "modifier", null, 0, 1, Modifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumEClass, io.typefox.yang.yang.Enum.class, "Enum", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(valueEClass, Value.class, "Value", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bitEClass, Bit.class, "Bit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(positionEClass, Position.class, "Position", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pathEClass, Path.class, "Path", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPath_Reference(), this.getXpathExpression(), null, "reference", null, 0, 1, Path.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(requireInstanceEClass, RequireInstance.class, "RequireInstance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRequireInstance_IsRequireInstance(), ecorePackage.getEString(), "isRequireInstance", null, 0, 1, RequireInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unknownEClass, Unknown.class, "Unknown", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUnknown_Extension(), this.getExtension(), null, "extension", null, 0, 1, Unknown.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUnknown_Name(), ecorePackage.getEString(), "name", null, 0, 1, Unknown.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(schemaNodeIdentifierEClass, SchemaNodeIdentifier.class, "SchemaNodeIdentifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSchemaNodeIdentifier_Target(), this.getSchemaNodeIdentifier(), null, "target", null, 0, 1, SchemaNodeIdentifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchemaNodeIdentifier_SchemaNode(), this.getSchemaNode(), null, "schemaNode", null, 0, 1, SchemaNodeIdentifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchemaNodeIdentifier_IsAbsolute(), ecorePackage.getEBoolean(), "isAbsolute", null, 0, 1, SchemaNodeIdentifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(groupingRefEClass, GroupingRef.class, "GroupingRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGroupingRef_Node(), this.getGrouping(), null, "node", null, 0, 1, GroupingRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathExpressionEClass, XpathExpression.class, "XpathExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(xpathStepEClass, XpathStep.class, "XpathStep", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathStep_Axis(), ecorePackage.getEString(), "axis", null, 0, 1, XpathStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathStep_Node(), this.getXpathNodeTest(), null, "node", null, 0, 1, XpathStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathNodeTestEClass, XpathNodeTest.class, "XpathNodeTest", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(xpathNameTestEClass, XpathNameTest.class, "XpathNameTest", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathNameTest_Prefix(), ecorePackage.getEString(), "prefix", null, 0, 1, XpathNameTest.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathNameTest_Ref(), this.getSchemaNode(), null, "ref", null, 0, 1, XpathNameTest.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(binaryOperatorEClass, BinaryOperator.class, "BinaryOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBinaryOperator_Left(), this.getExpression(), null, "left", null, 0, 1, BinaryOperator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBinaryOperator_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, BinaryOperator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBinaryOperator_Right(), this.getExpression(), null, "right", null, 0, 1, BinaryOperator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(featureReferenceEClass, FeatureReference.class, "FeatureReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFeatureReference_Feature(), this.getFeature(), null, "feature", null, 0, 1, FeatureReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unaryOperationEClass, UnaryOperation.class, "UnaryOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnaryOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, UnaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnaryOperation_Target(), this.getExpression(), null, "target", null, 0, 1, UnaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(binaryOperationEClass, BinaryOperation.class, "BinaryOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBinaryOperation_Left(), this.getExpression(), null, "left", null, 0, 1, BinaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBinaryOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, BinaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBinaryOperation_Right(), this.getExpression(), null, "right", null, 0, 1, BinaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(literalEClass, Literal.class, "Literal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLiteral_Value(), ecorePackage.getEString(), "value", null, 0, 1, Literal.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(minEClass, Min.class, "Min", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(maxEClass, Max.class, "Max", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(unparsedXpathEClass, UnparsedXpath.class, "UnparsedXpath", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnparsedXpath_Text(), ecorePackage.getEString(), "text", null, 0, 1, UnparsedXpath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathOrOperationEClass, XpathOrOperation.class, "XpathOrOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathOrOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathOrOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathOrOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathOrOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathOrOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathOrOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathAndOperationEClass, XpathAndOperation.class, "XpathAndOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathAndOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathAndOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathAndOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathAndOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathAndOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathAndOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathEqualityOperationEClass, XpathEqualityOperation.class, "XpathEqualityOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathEqualityOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathEqualityOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathEqualityOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathEqualityOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathEqualityOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathEqualityOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathRelationalOperationEClass, XpathRelationalOperation.class, "XpathRelationalOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathRelationalOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathRelationalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathRelationalOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathRelationalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathRelationalOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathRelationalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathAdditiveOperationEClass, XpathAdditiveOperation.class, "XpathAdditiveOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathAdditiveOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathAdditiveOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathAdditiveOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathAdditiveOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathAdditiveOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathAdditiveOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathMultiplicativeOperationEClass, XpathMultiplicativeOperation.class, "XpathMultiplicativeOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathMultiplicativeOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathMultiplicativeOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathMultiplicativeOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathMultiplicativeOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathMultiplicativeOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathMultiplicativeOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathUnaryOperationEClass, XpathUnaryOperation.class, "XpathUnaryOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathUnaryOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathUnaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathUnaryOperation_Target(), this.getXpathExpression(), null, "target", null, 0, 1, XpathUnaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathUnionOperationEClass, XpathUnionOperation.class, "XpathUnionOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathUnionOperation_Left(), this.getXpathExpression(), null, "left", null, 0, 1, XpathUnionOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathUnionOperation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, XpathUnionOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathUnionOperation_Right(), this.getXpathExpression(), null, "right", null, 0, 1, XpathUnionOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathLocationEClass, XpathLocation.class, "XpathLocation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathLocation_Target(), this.getXpathExpression(), null, "target", null, 0, 1, XpathLocation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getXpathLocation_IsDescendants(), ecorePackage.getEBoolean(), "isDescendants", null, 0, 1, XpathLocation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathLocation_Step(), this.getXpathStep(), null, "step", null, 0, 1, XpathLocation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathFilterEClass, XpathFilter.class, "XpathFilter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getXpathFilter_Target(), this.getXpathExpression(), null, "target", null, 0, 1, XpathFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathFilter_Predicate(), this.getXpathExpression(), null, "predicate", null, 0, 1, XpathFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathVariableReferenceEClass, XpathVariableReference.class, "XpathVariableReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathVariableReference_Name(), ecorePackage.getEString(), "name", null, 0, 1, XpathVariableReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathStringLiteralEClass, XpathStringLiteral.class, "XpathStringLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathStringLiteral_Value(), ecorePackage.getEString(), "value", null, 0, 1, XpathStringLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathNumberLiteralEClass, XpathNumberLiteral.class, "XpathNumberLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathNumberLiteral_Value(), ecorePackage.getEString(), "value", null, 0, 1, XpathNumberLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathFunctionCallEClass, XpathFunctionCall.class, "XpathFunctionCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathFunctionCall_Name(), ecorePackage.getEString(), "name", null, 0, 1, XpathFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getXpathFunctionCall_Args(), this.getXpathExpression(), null, "args", null, 0, -1, XpathFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(relativePathEClass, RelativePath.class, "RelativePath", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRelativePath_Step(), this.getXpathStep(), null, "step", null, 0, 1, RelativePath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(absolutePathEClass, AbsolutePath.class, "AbsolutePath", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAbsolutePath_IsDescendants(), ecorePackage.getEBoolean(), "isDescendants", null, 0, 1, AbsolutePath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAbsolutePath_Step(), this.getXpathStep(), null, "step", null, 0, 1, AbsolutePath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(currentRefEClass, CurrentRef.class, "CurrentRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCurrentRef_Ref(), this.getSchemaNode(), null, "ref", null, 0, 1, CurrentRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parentRefEClass, ParentRef.class, "ParentRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParentRef_Ref(), this.getSchemaNode(), null, "ref", null, 0, 1, ParentRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abbrevAttributeStepEClass, AbbrevAttributeStep.class, "AbbrevAttributeStep", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAbbrevAttributeStep_AttributeName(), ecorePackage.getEString(), "attributeName", null, 0, 1, AbbrevAttributeStep.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xpathNodeTypeEClass, XpathNodeType.class, "XpathNodeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXpathNodeType_Name(), ecorePackage.getEString(), "name", null, 0, 1, XpathNodeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(processingInstructionEClass, ProcessingInstruction.class, "ProcessingInstruction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProcessingInstruction_Instruction(), ecorePackage.getEString(), "instruction", null, 0, 1, ProcessingInstruction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //YangPackageImpl
